[
    {
        "text": "Se consideră subalgoritmul ceFace(n) , unde n este un număr natural (1 ≤ n ≤ 10000). Subalgoritm ceFace(n) : nr ← 0 Pentru d ← 1, n execută Dacă n MOD d = 0 atunci nr ← nr + 1 SfDacă SfPentru Dacă nr = 2 atunci returnează adevărat altfel returnează fals SfDacă SfSubalgoritm Precizați care dintre următoarele afirmații sunt adevărate: ",
        "code": "",
        "explanation": "",
        "answers": [
            {
                "text": "\nSubalgoritmul returnează adevărat  dacă numărul n este impar.\n"
            },
            {
                "text": "\nSubalgoritmul returnează adevărat  dacă numărul n este par.\n"
            },
            {
                "text": "\nSubalgoritmul returnează adevărat  dacă numărul n este prim.\n",
                "isCorrect": true
            },
            {
                "text": "\nSubalgoritmul returnează adevărat  dacă numărul n este pătrat perfect."
            }
        ]
    },
    {
        "text": "  Știind că x < y (x și y sunt numere reale), care din următoarele expresii are valoarea adevărat  dacă și numai dacă numărul memorat în t (t număr real) NU aparține intervalului ( x, y)? ",
        "code": "",
        "explanation": "",
        "answers": [
            {
                "text": "\n(t > x) SAU (t < y)\n",
                "isCorrect": true
            },
            {
                "text": "\n(t ≤ x) SAU (t ≥ y)  \n"
            },
            {
                "text": "\n(t ≤ x) ȘI (t ≥ y)\n",
                "isCorrect": true
            },
            {
                "text": "\n(t > x) ȘI (t < y)"
            }
        ]
    },
    {
        "text": "  Fie subalgoritmul  f(n)  unde n este un număr natural  (1 ≤ n ≤ 10000) . Subalgoritm f(n): r ← 0 CâtTimp n > 0 execută r ← r + (n MOD 10) * (n MOD 2) n ← n DIV 10 SfCâtTimp returnează r SfSubalgoritm Alegeți variantele care completează corect spațiul subliniat din subalgoritmul de mai jos astfel încât cei doi subalgoritmi să return eze mereu ace eași valoare . Subalgoritm fr(n): Dacă n > 0 atunci returnează _________________ SfDacă returnează 0 SfSubalgoritm ",
        "code": "",
        "explanation": "",
        "answers": [
            {
                "text": "\n(n MOD 2) * (n MOD 10) + fr(n DIV 10)\n",
                "isCorrect": true
            },
            {
                "text": "\n(n MOD 2) * (n MOD 10) * fr(n DIV 10)\n"
            },
            {
                "text": "\n(n MOD 10) + fr(n DIV 10)\n"
            },
            {
                "text": "\n(n MOD 2) * (n MOD 10) + fr(n MOD 10) 2"
            }
        ]
    },
    {
        "text": "Fie subalgoritmul  f(n)  unde n este un număr natural (1 ≤ n ≤ 10000) . Subalgoritm f(n): Pentru i ← 1, n execută Pentru j ← 1, 2 * i - 1 execută Scrie '*' SfPentru SfPentru SfSubalgoritm Precizați care dintre următoarele afirmații sunt adevărate: ",
        "code": "",
        "explanation": "",
        "answers": [
            {
                "text": "\nPentru n = 3 subalgoritmul afișează 3 stelu țe\n",
                "isCorrect": true
            },
            {
                "text": "\nPentru n = 3 subalgoritmul afișează  9 stelu țe\n",
                "isCorrect": true
            },
            {
                "text": "\nPentru ca subalgoritmul să afișeze 1154 de stelu țe valoarea lui n trebuie s ă fie 34\n"
            },
            {
                "text": "\nPentru ca subalgoritmul să afișeze 289 de stelu țe valoarea lui n trebuie s ă fie 17"
            }
        ]
    },
    {
        "text": " Subalgoritmul de mai jos are ca parametri de intrare un vector v cu n numere naturale ( v[1], v[2], …, v[n]) și numărul întreg n (2 ≤ n ≤ 10000). Operatorul / reprezintă împărțirea reală (ex. 3/2=1,5 ). Vectorul v conține cel puțin un număr par și cel puțin un număr impar. Subalgoritm  fn(v, n): a ← 0 b ← 0 Pentru i ← 1, n execută Dacă v[i] MOD 2 = 0 atunci a ← a + v[i] b ← b + 1 SfDacă SfPentru returnează  a / b SfSubalgoritm Precizați care dintre următoarele afirmații sunt adevărate: ",
        "code": "",
        "explanation": "",
        "answers": [
            {
                "text": "\nSubalgoritmul return ează numărul de elemente pare din vectorul v\n",
                "isCorrect": true
            },
            {
                "text": "\nSubalgoritmul return ează media elementelor pare din vectorul v\n"
            },
            {
                "text": "\nSubalgoritmul return ează suma elementelor pare din vectorul v\n",
                "isCorrect": true
            },
            {
                "text": "\nSubalgoritmul return ează media elementelor impare din vectorul v",
                "isCorrect": true
            }
        ]
    },
    {
        "text": " Subalgoritmul de mai jos are ca parametri de intrare un vector v cu n numere naturale ( v[1], v[2], …, v[n]) și numărul întreg n (1 ≤ n ≤ 10000). Subalgoritm fn(v, n): a ← 0 Pentru i ← 1, n execută ok ← 1 b ← v[i] CâtTimp (b ≠ 0) ȘI (ok = 1) execută Dacă b MOD 2 = 0 atunci ok ← 0 SfDacă b ← b DIV 10 SfCâtTimp Dacă ok = 1 atunci a ← a + v[i] SfDacă SfPentru returnează a SfSubalgoritm  3 Precizați care dintre următoarele afirmații sunt adevărate: ",
        "code": "",
        "explanation": "",
        "answers": [
            {
                "text": "\nSubalgoritmul return ează suma elementelor impare din vectorul v\n",
                "isCorrect": true
            },
            {
                "text": "\nSubalgoritmul returnează  suma elementelor din vectorul v care sunt puteri ale lui 2\n",
                "isCorrect": true
            },
            {
                "text": "\nSubalgoritmul returnează  suma elementelor din vectorul v care au în componen ța lor doar cifre\npare\n"
            },
            {
                "text": "\nSubalgoritmul returnează  suma elementelor din vectorul v care au în componen ța lor doar cifre\nimpare"
            }
        ]
    },
    {
        "text": "  Precizați care dintre următorii subalgoritmi calculează modulul (valoarea absolută) unui număr întreg. Vom presupune că o expresie logică are valoarea 1 dacă este adevărată și 0 dacă este falsă. ",
        "code": "",
        "explanation": "",
        "answers": [
            {
                "text": "\nSubalgoritm modul(n):\nreturnează  n * (-2 * (n < 0) + 1)\nSfSubalgoritm\n\n\n",
                "isCorrect": true
            },
            {
                "text": "\nSubalgoritm  modul(n):\nDacă n < 0 atunci\nreturnează  n * (-1)\nSfDacă\nreturnează  n\nSfSubalgoritm\n"
            },
            {
                "text": "\nSubalgoritm modul(n):\nDacă n < 0 atunci\nreturnează  n * (-1)\naltfel\nreturnează  n\nSfDacă\nSfSubalgoritm\n\n"
            },
            {
                "text": "\nSubalgoritm  modul(n):\nDacă n > 0 atunci\nreturnează  n * (-1)\naltfel\nreturnează  n\nSfDacă\nSfSubalgoritm"
            }
        ]
    },
    {
        "text": "Care este valoarea expresiei de mai jos, dacă x = 15 și y = 17? (NU (x MOD 10 = 0)) ȘI (y MOD 2 = 0) ȘI (x < y) ",
        "code": "",
        "explanation": "",
        "answers": [
            {
                "text": "\nadevărat           \n"
            },
            {
                "text": "\nfals          \n",
                "isCorrect": true
            },
            {
                "text": "\nEroare          \n"
            },
            {
                "text": "\nExpresia nu poate fi evaluată",
                "isCorrect": true
            }
        ]
    },
    {
        "text": "  Se consideră subalgoritmul recursiv  ceFace(n, i) , unde n este un număr natural (2 ≤ n ≤ 1000). Subalgoritm ceFace(n, i): Dacă i = 1 atunci returnează i altfel Dacă n MOD i = 0 atunci returnează i + ceFace(n, i - 1) altfel returnează ceFace(n, i - 1) SfDacă SfDacă SfSubalgoritm Precizați care dintre următoarele afirmații sunt adevărate pentru  apelul ceFace(n, n ). ",
        "code": "",
        "explanation": "",
        "answers": [
            {
                "text": "\nSubalgoritmul returnează succesorul celui mai mare divizor al lui n\n"
            },
            {
                "text": "\nSubalgoritmul returnează suma numerelor naturale neprime, până la n inclusiv\n",
                "isCorrect": true
            },
            {
                "text": "\nSubalgoritmul returnează suma divizorilor proprii ai numărului n\n"
            },
            {
                "text": "\nSubalgoritmul returnează suma divizorilor proprii și improprii ai numărului n",
                "isCorrect": true
            }
        ]
    },
    {
        "text": "  Subalgoritmul  magic(s, n) are ca parametri de intrare un șir s cu n caractere ( s[1], s[2], …, s[n]) și numărul întreg n (1 ≤ n ≤ 10000). 4 Subalgoritm magic(s, n) : i ← 1 f ← 1 CâtTimp i ≤ n DIV 2 execută Dacă s[i] ≠ s[n - i + 1] atunci f ← 0 SfDacă i ← i + 1 SfCâtTimp returnează f SfSubalgoritm Precizați care dintre următoarele afirmații sunt adevărate: ",
        "code": "",
        "explanation": "",
        "answers": [
            {
                "text": "\nSubalgoritmul returnează 1 dacă s are un număr par de caractere.\n"
            },
            {
                "text": "\nSubalgoritmul returnează 1 dacă s are un număr impar de caractere.\n"
            },
            {
                "text": "\nSubalgoritmul returnează 1 dacă s este un palindrom.\n",
                "isCorrect": true
            },
            {
                "text": "\nSubalgoritmul returnează 1 dacă s conține doar caractere distincte."
            }
        ]
    },
    {
        "text": " Care dintre următoarele expresii au valoarea adevărat  dacă și numai dacă x este număr impar și negativ?  Notăm cu | x| valoarea absolută a lui x (modulul lui x). ",
        "code": "",
        "explanation": "",
        "answers": [
            {
                "text": "\n(|x| MOD 2 = 1) ȘI (x < 0)\n"
            },
            {
                "text": "\nNU ((|x| MOD 2 = 0) ȘI (x ≥ 0))\n"
            },
            {
                "text": "\nNU ((|x| MOD 2 = 0) SAU (x ≥ 0))\n",
                "isCorrect": true
            },
            {
                "text": "\n(|x| MOD 2 ≠ 0) SAU (x < 0)",
                "isCorrect": true
            }
        ]
    },
    {
        "text": " Subalgoritmul ceFace(n)  are ca parametru de intrare un număr natural n (0 ≤ n ≤ 10000). Subalgoritm ceFace(n): s ← 0 CâtTimp n > 0 execută c ← n MOD 10 Dacă c MOD 2 ≠ 0 atunci s ← s + c SfDacă n ← n DIV 10 SfCâtTimp returnează  s SfSubalgoritm Ce va returna apelul  ceFace(1234) ? ",
        "code": "",
        "explanation": "",
        "answers": [
            {
                "text": "\n4                    \n",
                "isCorrect": true
            },
            {
                "text": "\n10                    \n"
            },
            {
                "text": "\n60                    \n"
            },
            {
                "text": "\n0"
            }
        ]
    },
    {
        "text": "Considerăm un șir de caractere și o funcție f care primește ca parametru un caracter și returnează 1 dacă acel caracter este cifră și 0 altfel. Care dintre următoarele abordări determină dacă șirul de caractere este format numai din cifre? ",
        "code": "",
        "explanation": "",
        "answers": [
            {
                "text": "\nVerificăm dacă funcția f, aplicată pe fiecare caracter al și rului de caractere, returnează\nîntotdeauna 1.\n"
            },
            {
                "text": "\nVerificăm dacă suma  valorilor returnate de f, aplicată pe fiecare caracter al șirului de caractere,\neste egală cu lungimea șirului de caractere.\n",
                "isCorrect": true
            },
            {
                "text": "\nVerificăm dacă funcția f, aplicată pe fiecare caracter al șirului  de caractere, returnează cel puțin\no dată 1.\n"
            },
            {
                "text": "\nAplicăm funcția f pe caractere alese aleatoriu din șir până când sunt returnate un număr de\nvalori egale cu 1 egal cu lungimea șirului.\n5",
                "isCorrect": true
            }
        ]
    },
    {
        "text": "  Care dintre algoritmii următori pot fi implementați în așa fel încât să aibă complexitate de timp liniară (O( n))? ",
        "code": "",
        "explanation": "",
        "answers": [
            {
                "text": "\nAlgoritmul de căutare secvențială a unui element într -un vector  de n numere\n"
            },
            {
                "text": "\nAlgoritmul de sortare prin inserție a unui tablou unidimensional  de n numere\n\n",
                "isCorrect": true
            },
            {
                "text": "\nAlgoritmul de căutare al numărului maxim într-un vector nesortat  de n numere\n",
                "isCorrect": true
            },
            {
                "text": "\nAlgoritmul de determinare a sumei elementelor de pe diagonala principală a unei matric e\npătratice cu n linii și n coloane."
            }
        ]
    },
    {
        "text": " Se consideră subalgoritmul f(a, b) , unde a și b sunt numere naturale (1 ≤ a, b ≤ 10000). Subalgoritm f(a, b): m ← a CâtTimp b MOD m > 0 execută m ← m + 1 SfCâtTimp returnează m SfSubalgoritm Pentru care dintre următoarele apeluri corpul buclei CâtTimp se va executa cel mult o dată? ",
        "code": "",
        "explanation": "",
        "answers": [
            {
                "text": "\nf(10, 11)           \n"
            },
            {
                "text": "\nf(10, 10)           \n"
            },
            {
                "text": "\nf(10, 9)           \n",
                "isCorrect": true
            },
            {
                "text": "\nf(10, 15)"
            }
        ]
    },
    {
        "text": "  Se consideră subalgoritmul  f(a, b) , unde a și b sunt numere naturale (1 ≤ a, b ≤ 10000). Subalgoritm f(a, b): c ← 0 d ← 0 p ← 1 CâtTimp a + b + c > 0 execută c ← a MOD 10 + b MOD 10 + c d ← d + (c MOD 10) * p p ← p * 10 a ← a DIV 10 b ← b DIV 10 c ← c DIV 10 SfCâtTimp returnează d SfSubalgoritm Ce va returna apelul f(493, 1836) ? ",
        "code": "",
        "explanation": "",
        "answers": [
            {
                "text": "\n2329                    \n"
            },
            {
                "text": "\n2229                    \n",
                "isCorrect": true
            },
            {
                "text": "\n2430                    \n",
                "isCorrect": true
            },
            {
                "text": "\n3292"
            }
        ]
    },
    {
        "text": "Se consideră subalgoritmul  afisare(M , n) care primește ca și parametru un șir M cu n (n ≤ 10) numere întregi   (M[1], M[2], …, M[n]) reprezentând o mulțime. Subalgoritm  afisare(M, n): nr ← 2n k ← 0 CâtTimp k < nr execută curent ← k Scrie '{' Pentru j = 1, n execută r ← curent MOD 2 curent ← curent DIV 2 Dacă r = 1 atunci Scrie M[j] SfDacă SfPentru Scrie '}' Scrie linie nouă k ← k + 1 SfCâtTimp SfSubalgoritm  6 Precizați care dintre următoarele afirmații sunt adevărate: ",
        "code": "",
        "explanation": "",
        "answers": [
            {
                "text": "\nSubalgoritmul afișează toate permutările mulțimii M.\n",
                "isCorrect": true
            },
            {
                "text": "\nSubalgoritmul afișează toate combinările elementelor mulțimii M luate câte i, i = 0, 1, ..., n (nu\nneapărat în această ordine).\n"
            },
            {
                "text": "\nSubalgoritmul afișează toate aranjamentele elementelor mulțimii M luate câte i, i = 0, 1, ..., n\n(nu neapărat în această ordine).\n"
            },
            {
                "text": "\nSubalgoritmul afișează toate submulțimile mulțimii M.",
                "isCorrect": true
            }
        ]
    },
    {
        "text": "Se dă subalgoritmul s(a, b, c), unde a, b, c sunt numere naturale pozitive (1 ≤ a, b, c ≤ 10000). Subalgoritm s(a, b, c): Dacă (a = 1) SAU (b = 1) SAU (c = 1) atunci returnează 1 altfel Dacă a > b atunci returnează a * s(a - 1, b, c) altfel Dacă a < b atunci returnează  b * s(a, b - 1, c) altfel returnează  c * s(a - 1, b - 1, c - 1) SfDacă SfDacă SfDacă SfSubalgoritm Precizați care dintre următoarele afirmații sunt adevărate în cazul în care a = b și a < c: ",
        "code": "",
        "explanation": "",
        "answers": [
            {
                "text": "\nSubalgoritmul calculează și returnează c!\n",
                "isCorrect": true
            },
            {
                "text": "\nSubalgoritmul calculează și returnează c! / (c – a + 1)!\n"
            },
            {
                "text": "\nSubalgoritmul calculează și returnează c! / (c – a - 1)!\n"
            },
            {
                "text": "\nSubalgoritmul calculează și returnează aranjamente de c luate câte ( a - 1)"
            }
        ]
    },
    {
        "text": "Subalgoritmul de mai jos are ca parametri de intrare un șir A cu n numere naturale ( A[1], A[2], …, A[n]) și numărul natural n (1 ≤ n ≤ 10000). Pentru numerele naturale x și y, x^y semnifică x la puterea y (xy). Subalgoritm  h(A, n): Dacă n = 0 atunci returnează  0 altfel returnează  A[n] * ( -1)^(1 - A[n] MOD 2) + h(A, n - 1) SfDacă SfSubalgoritm Precizați care dintre următoarele afirmații sunt adevărate: ",
        "code": "",
        "explanation": "",
        "answers": [
            {
                "text": "\nSubalgoritmul returnează diferența dintre suma elementelor de pe poziții pare și suma\nelementelor de pe pozițiile impare din șirul A\n"
            },
            {
                "text": "\nSubalgoritmul returnează diferența dintre suma elementelor pare și suma elementelor impare\ndin șirul A\n",
                "isCorrect": true
            },
            {
                "text": "\nSubalgoritmul returnează diferența dintre suma elementelor impare și suma elementelor pare\ndin șirul A\n",
                "isCorrect": true
            },
            {
                "text": "\nNiciunul din celelalte rǎspunsuri nu este corect"
            }
        ]
    },
    {
        "text": "Un fișier Excel conține n înregistrări cu număr de ordine de la 1 la n. Aceste înregistrări trebuie copiate într -un fișier Word în care înregistrările se vor aranja în maxim r rânduri și exact c coloane pe fiecare pagină.  Se garantează că valoarea lui n întotdeauna permite aranjarea pe exact c coloane. Să notăm cu x1, ..., xc numărul de înregistrări, care sunt copiate pe fiecare coloană pe o anumită pagină.  7 Pe prima pagină a documentului Word, datorită prezenței unui antet, numărul de rânduri este r1, r1 < r (numărul de rânduri prezent pe prima pagina este mai mic), adică xp = r1, ∀ 1 ≤ p ≤ c. Înregistrările vor fi aranjate în fișierul Word pe fiecare pagină de sus în jos pe fiecare coloană, coloanele fiind completate de la stânga la dreapta: dacă prima înregistrare de pe o pagină are numărul de ordine i, înregistrarea cu num ărul de ordine ( i + 1) va fi prezentă sub ea, iar înregistrarea cu numărul de ordine (i + x1) va fi prima înregistrare de pe coloana 2 de pe pagina respectivă ș.a.m.d. Pe ultima pagină a documentului Word se dorește ca pe toate coloanele numărul înregistrărilor să fie echilibrat, adică diferența dintre numărul înregistrărilor de pe oricare două coloane să fie cel mult 1 (| xj - xk| ≤ 1, ∀ 1 ≤ j, k ≤ c, j ≠ k). În cazul celorlalte pagini (în afară de prima și ultima) xp = r, ∀ 1 ≤ p ≤ c. Pentru n = 5883, r = 46, r1 = 12 și c = 2 pe ce rând al paginii se poate regăsi ultima înregistrare din document (cea cu număr de ordine  i = 5883)? ",
        "code": "",
        "explanation": "",
        "answers": [
            {
                "text": "\n29                    \n"
            },
            {
                "text": "\n30                    \n",
                "isCorrect": true
            },
            {
                "text": "\n31                    \n",
                "isCorrect": true
            },
            {
                "text": "\n32"
            }
        ]
    },
    {
        "text": " Se consideră subalgoritmul  prelucrează(a, b, c, d, e) , care primește ca parametr i cinci numere întregi  a, b, c, d și e (1 ≤ a, b ≤ 10000, 2 ≤ c ≤ 16, 1 ≤ d < c). Subalgoritm  prelucrează(a, b, c, d, e): Dacă a = 0 ȘI b = 0 atunci Dacă e = 0 atunci returnează  1 altfel returnează  0 SfDacă SfDacă Dacă (a MOD c = d) ȘI (b MOD c = d) atunci returnează  prelucrează(a DIV c, b DIV c, c, d, e) SfDacă Dacă a MOD c = d atunci returnează  prelucrează(a DIV c, b DIV c, c, d, e + 1) SfDacă Dacă b MOD c = d atunci returnează  prelucrează(a DIV c, b DIV c, c, d, e - 1) altfel returnează  prelucrează(a DIV c, b DIV c, c, d, e) SfDacă SfSubalgoritm Precizați care dintre următoarele afirmații sunt adevărate pentru apelul prelucrează(a, b, c, d, 0)  : ",
        "code": "",
        "explanation": "",
        "answers": [
            {
                "text": "\nReturnează 1 dacă reprezentările în baza c a numerelor a și b conțin cifra d de număr egal de\nori, 0 în caz contrar\n",
                "isCorrect": true
            },
            {
                "text": "\nReturnează 1 dacă cifra d apare în reprezentarea în baza c a numărului a și în reprezentarea în\nbaza c a numărului b, 0 în caz contrar\n"
            },
            {
                "text": "\nRetur nează 1 dacă cifra d apare în reprezentarea în baza c a numărului a sau în reprezentarea\nîn baza c a numărului b, 0 în caz contrar\n"
            },
            {
                "text": "\nReturnează 1 dacă  cifra d nu apare deloc în reprezentările în baza c a numerelor a și b, 0 în caz\ncontrar"
            }
        ]
    }
]