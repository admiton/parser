[
    {
        "text": "Fie următorul subalgoritm, av ând ca parametru  de intrare numărul natural n și care returnează  un număr natural. Subalgoritm calcul(n) : E ← 1 P ← 1 i ← 2 CâtTimp i ≤ n execută P ← (-1) * P * i E ← E + P i ← i + 1 SfCâtTimp returnează E SfSubalgoritm Care este valoarea returnată de subalgoritm, în condi țiile în care n ≥ 1? ",
        "code": "",
        "explanation": "",
        "answers": [
            {
                "text": "\n1! – 2! + 3! – 4! + ... + ( -1)n + 1 · n!\n",
                "isCorrect": true
            },
            {
                "text": "\n1 – 1! + 2! – 3! + ... + ( -1)n · n!\n"
            },
            {
                "text": "\n1 – 1 · 2 + 1 · 2 · 3 – 1 · 2 · 3 · 4 + ... +  ( -1)n + 1 · 1 · 2 · ... · n\n",
                "isCorrect": true
            },
            {
                "text": "\n1 + 1 · 2 – 1 · 2 · 3 + 1 · 2 · 3 · 4 + ... + ( -1)n· 1· 2 · ... · n"
            }
        ]
    },
    {
        "text": "Un fi șier Excel con ține n înregistrări numerotate  de la 1 la n. Aceste înregistrări trebuie copiate într - un fi șier Word în care înregistrările se vor aranja în câte r rânduri și c coloane pe fiecare pagină  (cu excepția primei și ultimei pagini) .  Pe prima pagină a documentului Word, datorită prezen ței unui antet, numărul de rânduri este r1, r1 < r (numărul de rânduri prezent pe prima pagina este mai mic). Înregistrările vor fi aranjate în fi șierul Word pe fiecare pagină de sus în jos pe fiecare coloană, coloanele fiind completate de la stânga la dr eapta: dacă prima înregistrare de pe o pagină are numărul de ordine i, înregistrarea cu numărul de ordine (i + 1) va fi prezentă sub ea, iar înregistrarea cu numărul de ordine (i + r) va fi prima înregistrare de pe coloana 2 de pe pagina respectivă ș.a.m.d. Pentru n = 5000, r = 46, r1 = 12 și c = 2 pe ce pagină a documentului Word și pe ce coloană se va regăsi înregistrarea cu număr de ordine i = 3245? ",
        "code": "",
        "explanation": "",
        "answers": [
            {
                "text": "\nPagina 36, ultima coloană\n"
            },
            {
                "text": "\nPagina 37, prima coloană\n",
                "isCorrect": true
            },
            {
                "text": "\nPagina 37, ultima coloană\n"
            },
            {
                "text": "\nPagina 38, prima coloană"
            }
        ]
    },
    {
        "text": "Se consideră subalgoritmul ceFace(m) ,  unde  m este un număr  natural (10  ≤ m ≤ 10000). Subalgoritm ceFace(m) : Dacă m = 0 atunci returnează 0 SfDacă Dacă m MOD 9 = 0 atunci returnează  9 SfDacă returnează  m MOD 9 SfSubalgoritm  2 Preciza ți care dintre următoarele afirma ții sunt adevărate: ",
        "code": "",
        "explanation": "",
        "answers": [
            {
                "text": "\nSubalgoritmul returnează restul împăr țirii numărului m la 9.\n"
            },
            {
                "text": "\nSubalgoritmul returnează numărul divizorilor care sunt divizibili cu 9 ai numărului m.\n"
            },
            {
                "text": "\nSubalgoritmul returnează cifra de control a numărului m (suma cifrel or sale, apoi suma cifrelor\nacestei sume, până când suma ob ținută este un număr format dintr -o singură cifră).\n",
                "isCorrect": true
            },
            {
                "text": "\nSubalgoritmul returnează cifra de control a numărului m (suma cifrelor sale, apoi suma cifrelor\nacestei sume, până când suma ob ținută este un num ăr format dintr -o singură cifră) dacă și numai\ndacă numărul m este divizibil cu 9."
            }
        ]
    },
    {
        "text": "Pentru a genera numerele cu n cifre formate doar din cifrele 0, 2, 9,  se utilizează un algoritm care, pentru n = 2, generează în ordine crescătoare numerele 20, 22, 29, 90, 92, 99. Dacă n = 4 și se utilizează același  algoritm, care este numărul generat imediat după numărul 2009 ? ",
        "code": "",
        "explanation": "",
        "answers": [
            {
                "text": "\n2022\n"
            },
            {
                "text": "\n2090\n"
            },
            {
                "text": "\n2010\n"
            },
            {
                "text": "\nNiciuna dintre celelalte variante",
                "isCorrect": true
            }
        ]
    },
    {
        "text": "Se consideră subalgoritmul cauta(n) , unde n este un număr natural (0 ≤ n ≤ 1000000). Subalgoritm cauta(n): v ← 0 Dacă n = 0 atunci returnează  1 altfel m ← n CâtTimp m > 0 execută Dacă m MOD 10 = 0 atunci v ← v + 1 SfDacă m ← m DIV 10 SfCâtTimp returnează  v SfDacă SfSubalgoritm Preciza ți care dintre următoarele afirma ții sunt adevărate: ",
        "code": "",
        "explanation": "",
        "answers": [
            {
                "text": "\nSubalgoritmul determină și returnează  c âte cifre are numărul n.\n"
            },
            {
                "text": "\nSubalgoritmul returnează 1 dacă numărul n este o putere a lui 10 și 0 altfel.\n"
            },
            {
                "text": "\nSubalgoritmul returnează 1 dacă numărul n se termină cu cifra 0 și 0 altfel.\n"
            },
            {
                "text": "\nSubalgoritmul determină și returnează numărul de cifre 0 din numărul n.",
                "isCorrect": true
            }
        ]
    },
    {
        "text": "Se consideră subalgoritmul abc(a, n, p) , unde n este număr natural (1 ≤ n ≤ 10000), p este număr întreg ( -10000 ≤ p ≤ 10000), iar a este un șir cu n numere naturale nenule ( a[1], a[2], …, a[n]). Subalgoritm  abc(a, n, p) : Dacă n < 1 atunci returnează  0 altfel Dacă (1 ≤ p) ȘI (p ≤ n) atunci returnează  a[p] altfel returnează  -1 SfDacă SfDacă SfSubalgoritm  3 Preciza ți care dintre următoarele afirma ții sunt adevărate: ",
        "code": "",
        "explanation": "",
        "answers": [
            {
                "text": "\nSubalgoritmul returnează -1 dacă și numai dacă p este negativ sau mai mare decât n.\n"
            },
            {
                "text": "\nSubalgoritmul returnează elementul de pe poziția p dacă p este strict mai mare decât 0 și mai\nmic sau egal decât lungimea șirului.\n",
                "isCorrect": true
            },
            {
                "text": "\nSubalgoritmul nu returnează niciodată 0 p entru valori ale parametri lor care respectă\nprecondi țiile din enun ț.\n"
            },
            {
                "text": "\nSubalgoritmul returnează elementul de pe poziția p dacă p este mai mare sau egal cu 0 și mai\nmic strict decât lungimea șirului. În cazul în care p nu este între 1 și n, returnează -1."
            }
        ]
    },
    {
        "text": "Care dintre secven țele următoare determină în variabila i lungimea unui șir de caractere care se termină cu caracterul '*' (asterisc)? Primul caracter se află la indicele 1, iar caracterul asterisc este parte a șirului  de caractere . ",
        "code": "",
        "explanation": "",
        "answers": [
            {
                "text": "\ni ← 1\nCâtTimp x[i] ≠ '*' execută\ni ← i + 1\nSfCâtTimp\n"
            },
            {
                "text": "\ni ← 1\nCâtTimp x[i] = '*' execută\ni ← i + 1\nSfCâtTimp\ni ← i - 1\n",
                "isCorrect": true
            },
            {
                "text": "\ni ← 1\nCâtTimp x[i] ≠ '*' execută\ni ← i + 1\nSfCâtTimp\ni ← i + 1\n"
            },
            {
                "text": "\ni ← 1\nCâtTimp x[i] ≠ '*' execută\ni ← i + 1\nSfCâtTimp\ni ← i - 1"
            }
        ]
    },
    {
        "text": "Fie următorul subalgoritm, av ând ca parametru numărul natural nenul n și care returnează un număr natural . Subalgoritm f(n): j ← n CâtTimp j > 1 execută i ← 1 CâtTimp i ≤ n execută i ← 2 * i SfCâtTimp j ← j DIV 3 SfCâtTimp returnează j SfSubalgoritm În care dintre următoarele clase de complexitate se încadrează complexitatea timp a algoritmului ? ",
        "code": "",
        "explanation": "",
        "answers": [
            {
                "text": "\nO(log 2 𝒏)\n"
            },
            {
                "text": "\nO(log 22 𝒏)\n"
            },
            {
                "text": "\nO(log 32 𝒏)\n",
                "isCorrect": true
            },
            {
                "text": "\nO(log 2 log 3 n) 4",
                "isCorrect": true
            }
        ]
    },
    {
        "text": "Subalgoritmul  cate(n, m) prime ște ca parametri numerele naturale n și m. Subalgoritm cate(n, m): Dacă n ≤ m atunci Dacă (n MOD 2 = 0) ȘI (n MOD 3 ≠ 0) atunci returnează 1 + cate(n + 1, m) altfel returnează cate(n + 1, m) SfDacă altfel returnează 0 SfDacă SfSubalgoritm Preciza ți care dintre următoarele afirma ții sunt adevărate: ",
        "code": "",
        "explanation": "",
        "answers": [
            {
                "text": "\nDacă n = 0 și m = 1, subalgoritmul returnează valoarea 0.\n",
                "isCorrect": true
            },
            {
                "text": "\nDacă n = 4 și m = 21, subalgoritmul returnează valoarea 6.\n"
            },
            {
                "text": "\nDacă n = 7 și m = 120, subalgoritmul returnează valoarea 36.\n",
                "isCorrect": true
            },
            {
                "text": "\nDacă n = 1 și m = 215, subalgoritmul  returnează valoarea 72.",
                "isCorrect": true
            }
        ]
    },
    {
        "text": "Se consideră subalgoritmul verifica(n) , unde n este un număr natural (1 ≤ n ≤ 100000). Subalgoritm verifica(n): CâtTimp n > 0 execută Dacă (n MOD 3) > 1 atunci returnează  0 SfDacă n ← n DIV 3 SfCâtTimp returnează  1 SfSubalgoritm Preciza ți care dintre următoarele afirma ții sunt adevărate: ",
        "code": "",
        "explanation": "",
        "answers": [
            {
                "text": "\nSubalgoritmul returnează 1 dacă n este o putere a lui 3, 0 în caz contrar.\n",
                "isCorrect": true
            },
            {
                "text": "\nSubalgoritmul  returnează 1 dacă scrierea în baza 3 a lui n conține doar cifrele 0 și/sau 1, 0 în\ncaz contrar.\n",
                "isCorrect": true
            },
            {
                "text": "\nSubalgoritmul returnează 1 dacă n poate fi scris ca sumă a puterilor distincte ale lui 3, 0 în caz\ncontrar.\n",
                "isCorrect": true
            },
            {
                "text": "\nSubalgoritmul returnează 1 dacă scrierea în baza 3 a lui n conține doar cifra 2, 0 în caz contrar.",
                "isCorrect": true
            }
        ]
    },
    {
        "text": "Pentru un număr natural nr (1000 ≤ nr ≤ 1000000), definim opera ția de decrementare în modul următor: dacă ultima cifră a lui nr nu este 0, scădem 1 din nr, altfel, împăr țim nr la 10 și păstrăm doar partea întreagă. Care dintre următorii subalgoritmi returnează, la apelul  decrementare(nr, k),  numărul ob ținut aplicând de k ori (0 ≤ k ≤ 100) opera ția de decrementare pe numărul nr? De exemplu, pentru nr = 15243 și k = 10, rezultatul este 151. ",
        "code": "",
        "explanation": "",
        "answers": [
            {
                "text": "\nSubalgoritm  decrementare(nr, k) :\nDacă k = 0 atunci\nreturnează  nr\naltfel\nDacă nr MOD 10 ≠ 0 atunci\nreturnează  decrementare(nr DIV 10, k - 1)\naltfel\nreturnează  decrementare(nr - 1, k - 1)\nSfDacă\nSfDacă\nSfSubalgoritm  5\n"
            },
            {
                "text": "\nSubalgoritm  decrementare(nr, k) :\nCâtTimp k > 0 execută\nDacă nr MOD 10 = 0 atunci\nnr ← nr DIV 10\naltfel\nnr ← nr - 1\nSfDacă\nSfCâtTimp\nreturnează  nr\nSfSubalgoritm\n\n",
                "isCorrect": true
            },
            {
                "text": "\nSubalgoritm  decrementare(nr, k) :\nPentru i ← 1, k execută\nDacă nr MOD 10 > 0 atunci\nnr ← nr - 1\naltfel\nnr ← nr DIV 10\nSfDacă\nSfPentru\nreturnează  nr\nSfSubalgoritm\n\n"
            },
            {
                "text": "\nSubalgoritm  decrementare(nr, k) :\nDacă k = 0 atunci\nreturnează  nr\naltfel\nDacă k > nr MOD 10 atunci\nnr1 ← nr DIV 10\nreturnează  decrementare(nr1,   k - nr MOD 10 - 1)\naltfel\nreturnează  decrementare(nr - k, 0)\nSfDacă\nSfDacă\nSfSubalgoritm",
                "isCorrect": true
            }
        ]
    },
    {
        "text": "Se dă următorul subalgoritm care are ca parametri de intrare un șir x cu n numere naturale ( x[1], x[2], …, x[n]) și numărul întreg n. Subalgoritm  f(x, n): Dacă n = 1 atunci returneaz ă 100 altfel Dacă x[n] > f(x, n - 1) atunci returneaz ă x[n] altfel returnează  f(x, n - 1) SfDacă SfDacă SfSubalgoritm Care va fi rezultatul execu ției subalgoritmului pentru x = [101, 7, 6, 3] și n = 4? ",
        "code": "",
        "explanation": "",
        "answers": [
            {
                "text": "\n101\n"
            },
            {
                "text": "\n3\n"
            },
            {
                "text": "\n100\n",
                "isCorrect": true
            },
            {
                "text": "\n7 6"
            }
        ]
    },
    {
        "text": "Subalgoritmul de mai jos are ca parametri de intrare un șir a cu n numere naturale ( a[1], a[2], …, a[n]) și numărul natural n (2 ≤ n ≤ 10000). Subalgoritm  h(a, n): Dacă n ≤ 0 atunci returneaz ă 0 SfDacă Dacă (n MOD 2 = 0) ȘI (a[n] MOD 2 = 0) atunci returneaz ă h(a, n - 1) + a[n] SfDacă returneaz ă h(a, n - 1) - a[n] SfSubalgoritm Preciza ți care dintre următoarele afirma ții sunt adevărate: ",
        "code": "",
        "explanation": "",
        "answers": [
            {
                "text": "\nSubalgoritmul returnează diferen ța dintre suma elementelor care au aceea și paritate cu pozi ția\npe care se află și suma elementelor care au paritate diferită fa ță de pozi ția pe care se află din\nșirul a.\n"
            },
            {
                "text": "\nSubalgoritmul returnează diferen ța dintre suma elementelor pare de pe pozi țiile pare și suma\nelementelor impare de pe pozi țiile impare din șirul a.\n",
                "isCorrect": true
            },
            {
                "text": "\nSubalgoritmul returnează diferen ța dintre suma elementelor pare și suma elementelor impare\ndin șirul a.\n"
            },
            {
                "text": "\nSubalgoritmul returnează diferen ța dintre suma elementelor pare de pe pozi ții pare și suma\ncelorlalte elemente din șirul a.",
                "isCorrect": true
            }
        ]
    },
    {
        "text": "Se consideră subalgoritmul ceFace(n) , cu parametrul n număr natural nenul . Subalgoritm ceFace(n): i ← 1 CâtTimp n > 0 execută Dacă n MOD 2 ≠ 0 atunci scrie i SfDacă i ← i + 1 n ← n DIV 2 SfCâtTimp SfSubalgoritm Preciza ți care dintre următoarele afirma ții sunt adevărate: ",
        "code": "",
        "explanation": "",
        "answers": [
            {
                "text": "\nSubalgoritmul afi șează secven ța: 12345  pentru n = 31.\n"
            },
            {
                "text": "\nSubalgoritmul afi șează secven ța: 234 pentru n = 14.\n"
            },
            {
                "text": "\nSubalgoritmul afi șează 1 la începutul secven ței, pentru n impar.\n"
            },
            {
                "text": "\nSubalgoritmul afi șează un singur număr pentru n = 2k , unde k este un număr natural.",
                "isCorrect": true
            }
        ]
    },
    {
        "text": "Se dă o mul țime S, care con ține n intervale specificate prin capătul stâng si și capătul drept di (si < di ∀ i = 1... n). Se dore ște determinarea unei submul țimi S’ ⊆ S de m elemente, astfel încât să nu existe două intervale în S’ care se intersectează și m să aibă cea mai mare valoare posibilă. Care dintre următoarele strategii rezolvă corect problema? ",
        "code": "",
        "explanation": "",
        "answers": [
            {
                "text": "\nSe sortează intervalele din mul țimea S crescător după capătul stâng. Se adaugă primul interval\ndin șirul sortat în S’. Se parcurg celelalte elemente din șir în ordinea sortată și când se întâlne ște\nun interval care nu se intersectează cu intervalul care a fost adăugat  ultima oară în S’, se adaugă\nși acesta în S’.\n"
            },
            {
                "text": "\nSe sortează intervalele din mul țimea S crescător după capătul drept. Se adaugă primul interval\ndin șirul sortat în S’. Se parcurg celelalte elemente din șir în ordinea sortată și când se întâlne ște\nun interval care nu se intersectează cu intervalul care a fost adăugat ultima oară în S’, se adaugă\nși acesta în S’. 7\n",
                "isCorrect": true
            },
            {
                "text": "\n Se sortează intervalele din mul țimea S crescător după lungimea intervalului. Se adaugă primul\ninterval din șirul sortat în S’. Se parcu rg celelalte elemente din șir în ordinea sortată și când se\nîntâlne ște un interval care nu se intersectează cu intervalul care a fost adăugat ultima oară în S’,\nse adaugă și acesta în S’.\n"
            },
            {
                "text": "\nSe sortează intervalele din mul țimea S crescător după numărul de int ervale din S cu care se\nintersectează. Se adaugă primul interval din șirul sortat în S’. Se parcurg celelalte elemente din\nșir în ordinea sortată și când se întâlne ște un interval care nu se intersectează cu intervalul care\na fost adăugat ultima oară în S’, se adaugă și acesta în S’.",
                "isCorrect": true
            }
        ]
    },
    {
        "text": "Se consideră subalgoritmul f(a, b) , care prime ște ca parametri două numere naturale  a și b (1 ≤ a < b ≤ 1000). Subalgoritm  f(a, b): m ← 0 Pentru n ← a, b execută c ← 0 Pentru d ← 1, n execută Dacă n MOD d = 0 atunci c ← c + 1 SfDacă SfPentru Dacă c > m atunci m ← c SfDacă SfPentru Pentru n ← a, b execută c ← 0 Pentru d ← 1, n execută Dacă n MOD d = 0 atunci c ← c + 1 SfDacă SfPentru Dacă c = m atunci scrie n SfDacă SfPentru SfSubalgoritm Preciza ți care dintre următoarele afirma ții sunt adevărate: ",
        "code": "",
        "explanation": "",
        "answers": [
            {
                "text": "\nSubalgoritmul afi șează maximul dintre numărul de divizori ai lui a și numărul de divizori ai\nlui b.\n",
                "isCorrect": true
            },
            {
                "text": "\nSubalgoritmul afi șează numerele naturale din intervalul [ a, b] care au proprietatea că au cel\nmai mare număr de divizori.\n"
            },
            {
                "text": "\nSubalgoritmul afi șează numărul de divizori pentru fiecare număr natural din intervalul [ a, b].\n"
            },
            {
                "text": "\nSubalgoritmul afi șează numerele naturale din intervalul [ a, b] care au proprietatea că au cel\nmai mare număr de divizori proprii."
            }
        ]
    },
    {
        "text": "Fie numerele naturale a și b, cu b ≠ 0. Care dintre următoarele variante calculează: • a DIV b, dacă a MOD b = 0 • (a / b)  rotunjit în sus către cel mai apropiat întreg, dacă a MOD b ≠ 0 ",
        "code": "",
        "explanation": "",
        "answers": [
            {
                "text": "\n(a - 1) DIV b\n"
            },
            {
                "text": "\n(a + b + 1) DIV b\n",
                "isCorrect": true
            },
            {
                "text": "\n(a + b - 1) DIV b\n"
            },
            {
                "text": "\n((a + 2 * b - 1) DIV b) - 1 8"
            }
        ]
    },
    {
        "text": " Ionel trebuie să implementeze algoritmul de căutare binară a unui element a într-un șir V cu n (1 ≤ n ≤ 1000) numere întregi ordonate crescător ( V[1], V[2], …, V[n]). El scrie următorul   subalgoritm : Subalgoritm CautareBinara(a, n, V): st ← 1 dr ← n Câttimp dr – st > 1 execută m ← (st + dr) DIV 2 Dacă a ≤ V[m] atunci dr ← m altfel st ← m SfDacă SfCâttimp returnează  dr SfSubalgoritm Precizați care dintre următoarele afirmații sunt adevărate: ",
        "code": "",
        "explanation": "",
        "answers": [
            {
                "text": "\nDacă n = 1 atunci valoarea returnată de subalgoritm  este întotdeauna 1.\n"
            },
            {
                "text": "\nPentru orice n ≥ 1, subalgoritmul scris de Ionel returnează valoarea 1 atunci când a este mai\nmic decât toate elementele din șir.\n"
            },
            {
                "text": "\nAtunci când elementul a apare în șir, subalgoritmul scris de Ionel NU returnează întotdeauna\npoziția (indicele în vectorul V) pe care acesta apare.\n"
            },
            {
                "text": "\nPentru orice  n > 1, subalgoritmul scris de Ionel returnează valoarea n atunci când a este mai\nmare decât toate elementele din șir.",
                "isCorrect": true
            }
        ]
    },
    {
        "text": "Se consideră subalgoritmul calcul(x, n) , unde parametrii de intrare sunt numerele naturale n și x, cu condi ția 1 ≤ x ≤ n < 10. Subalgoritm calcul(x, n) : b ← 1 Pentru i ← 1, n - x execută b ← b * i SfPentru a ← b Pentru i ← n – x + 1, n execută a ← a * i SfPentru returnează a DIV b SfSubalgoritm Preciza ți care dintre următoarele afirma ții sunt adevărate: ",
        "code": "",
        "explanation": "",
        "answers": [
            {
                "text": "\nDacă n = 5 și x = 2, atunci subalgoritmul returnează 20.\n"
            },
            {
                "text": "\nDacă n = 3 și x = 2, atunci subalgoritmul returnează 6.\n",
                "isCorrect": true
            },
            {
                "text": "\nSubalgoritmul  returnează  cardinalitatea mulțimii { 𝑐1𝑐2…𝑐𝑥  : ci ≠ cj ∀ 1 ≤ i, j ≤ x, i ≠ j,  1 ≤ ci\n≤ n}\n",
                "isCorrect": true
            },
            {
                "text": "\nSubalgoritmul efectuează n opera ții de înmul țire."
            }
        ]
    },
    {
        "text": "Se consideră subalgoritmul  ceFace(n,k) , care primește ca și parametru două numere naturale nenule n și k (1 ≤ n, k ≤ 100 0000). Subalgoritm ceFace(n, k): Câttimp n ≥ 1 execută Dacă k ≤ n atunci i ← k altfel i ← n SfDacă  9 n ← n - i x ← 1 Câttimp i ≥ 1 execută Scrie x,’ ’ x ← x + 1 i ← i - 1 SfCâttimp SfCâttimp SfSubalgoritm Precizați care dintre următoarele afirmații sunt adevărate: ",
        "code": "",
        "explanation": "",
        "answers": [
            {
                "text": "\nPentru n = 8 și k = 3 subalgoritmul afișează  șirul 1 2 3 1 2 3 1 2\n"
            },
            {
                "text": "\nPentru k = 2, cea mai mică valoare a lui n pentru care se afișează de 3 ori valoarea 1 pe ecran\neste n = 3.\n",
                "isCorrect": true
            },
            {
                "text": "\nPentru k = 5, cea mai mică valoare a lui n pentru care se afișează de 37 ori valoarea 2 pe ecran\neste n = 182 .\n",
                "isCorrect": true
            },
            {
                "text": "\nPentru n = 7 și k = 3 subalgoritmul afișează 1 2 3 1 2 3"
            }
        ]
    }
]