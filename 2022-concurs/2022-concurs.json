[
    {
        "text": "  Se consideră  algoritmul  magic(x) , unde  x este un număr  natural (1  ≤ x ≤ 32000). Precizați care dintre următoarele afirmații sunt adevărate: ",
        "code": "Algorithm magic(x):\n    st ← 1\n    dr ← x\n    While st ≤ dr execute\n        mj ← (st + dr) DIV 2\n        If mj * mj = x then\n            return True\n        EndIf\n        If mj * mj < x then\n            st ← mj + 1\n        else\n            dr ← mj – 1\n        EndIf\n    EndWhile\n    return False\nEndAlgorithm",
        "explanation": "",
        "answers": [
            {
                "text": "\nPentru orice valoare de intrare x strict mai mică decât 10 a lgoritmul returnează False .\n"
            },
            {
                "text": "\nAlgoritmul descompune numărul x în factorii săi primi.\n\n"
            },
            {
                "text": "\nAlgoritmul returnează True dacă numărul x este pătrat perfect.\n",
                "isCorrect": true
            },
            {
                "text": "\nAlgoritmul nu returnează True pentru nici o valoare validă a parametrului de intrare x."
            }
        ]
    },
    {
        "text": "  Se consideră algoritmul calculeaza(a,b) , unde a și b sunt numere naturale (1 ≤ a, b ≤ 10000). Precizați care dintre următoarele afirmații sunt adevărate: ",
        "code": "Algorithm calculeaza (a, b):\n    x ← 1\n    For i ← 1, b execute\n        x ← (x MOD 10) * a\n    EndFor\n    return x\nEndAlgorithm",
        "explanation": "",
        "answers": [
            {
                "text": "\nDacă a = 107 și b = 101, valoarea returnată este 107.\n\n"
            },
            {
                "text": "\nDacă a = 1001 și b  = 101, valoarea returnată este 1001.\n\n"
            },
            {
                "text": "\nPentru toate apelurile algoritmului cu 1 ≤ a ≤ 10000 și b = 101, valoarea returnată este valoarea\nlui a.\n\n",
                "isCorrect": true
            },
            {
                "text": "\nPentru toate apelurile algoritmului cu a = 100 1 și 1 ≤ b ≤ 10000, valoarea returnată este 1001."
            }
        ]
    },
    {
        "text": "Se consideră algoritmul afis(n) , unde n este un număr natural (0 ≤  n ≤  10000). Ce se va afișa la apelul afis(n) ? ",
        "code": "Algorithm afis(n):\nWrite n, \" \"\nIf n > 0 then\nafis(n DIV 2)\nWrite n, \", \"\nEndIf\nEndAlgorithm",
        "explanation": "",
        "answers": [
            {
                "text": "\nSe afișează un șir de numere în care primul element este egal cu ultimul, al doilea cu penultimul etc.\n(cu excepția elementului din mijloc ).\n",
                "isCorrect": true
            },
            {
                "text": "\nSe afișează un șir de numere pare.\n"
            },
            {
                "text": "\nSe afișează un șir de numere î n ordine crescătoare urmate de numere în ordine descrescătoare.\n",
                "isCorrect": true
            },
            {
                "text": "\nSe afișează un șir de numere în ordine descrescătoare urmate de numere în ordine crescătoare.",
                "isCorrect": true
            }
        ]
    },
    {
        "text": "Se consideră algoritmul cauta(n, b), unde n și b sunt numere natural e (0 ≤ n ≤ 106, 2 ≤ b < 10) . Precizați care dintre următoarele afirmații sunt adevărate: ",
        "code": "Algorithm cauta(n, b):\n    v ← 0\n    If n = 0 then\n        return 1\n    else\n        m ← n\n        While m > 0 execute\n            If m MOD b = 0 then\n                v ← v + 1\n            EndIf\n            m ← m DIV b\n        EndWhile\n        return v\n    EndIf\nEndAlgorithm",
        "explanation": "",
        "answers": [
            {
                "text": "\nAlgoritmul determină și returnează  câte cifre are numărul n.\n\n"
            },
            {
                "text": "\nAlgoritmul returnează 1 dacă numărul n este o putere a lui b și 0 altfel.\n"
            },
            {
                "text": "\nAlgoritmul determină și returnează numărul de cifre 0 din reprezentarea în baza b a\nnumărului n.\n\n",
                "isCorrect": true
            },
            {
                "text": "\nAlgoritmul returnează 1 dacă numărul n se termină cu cifra b și 0 altfel."
            }
        ]
    },
    {
        "text": "Se consideră algoritmul abc(a, n, p) , unde n este număr natural (1 ≤ n ≤ 10000), p este număr întreg (-10000 ≤ p ≤ 10000), iar a este un șir cu n numere naturale nenule ( a[1], a[2], …, a[n]). Precizați care dintre următoarele afirmații sunt adevărate: ",
        "code": "Algorithm abc(a, n, p):\nIf n < 1 then\nreturn -1\nelse\nIf (1 ≤ p) AND (p ≤ n) then\nreturn a[p]\nelse\nreturn 0\nEndIf\nEndIf\nEndAlgorithm",
        "explanation": "",
        "answers": [
            {
                "text": "\nAlgoritmul returnează 0 dacă și numai dacă p este negativ sau mai mare decât n.\n"
            },
            {
                "text": "\nAlgoritmul returnează elementul de pe poziția p dacă p este strict mai mare decât 0 și mai mic\nsau egal decât lungimea șirului.\n\n",
                "isCorrect": true
            },
            {
                "text": "\nAlgoritmul nu returnează niciodată 0 pentru valori ale parametrilor care respectă precondițiile\ndin enunț.\n"
            },
            {
                "text": "\nAlgoritmul returnează elementul de pe poziția p dacă p este mai mare sau egal cu 0 și mai mic\nstrict decât lungimea șirului."
            }
        ]
    },
    {
        "text": "Pentru a genera numerele cu n cifre formate doar din cifrele 0, 6, 7,  se utilizează un algoritm care, pentru n = 2, generează în ordine crescătoare numerele 60, 66, 67, 70, 76, 77. Dacă n = 4 și se utilizează același algoritm, care este numărul generat imediat după numărul 6767? ",
        "code": "",
        "explanation": "",
        "answers": [
            {
                "text": "\n7667\n"
            },
            {
                "text": "\n6760\n",
                "isCorrect": true
            },
            {
                "text": "\n6776\n"
            },
            {
                "text": "\nNiciuna dintre celelalte variante",
                "isCorrect": true
            }
        ]
    },
    {
        "text": "Pentru un număr natural nr (1000 ≤ nr ≤ 1000000), definim operația de decrementare în modul următor: dacă ultima cifră a lui nr nu este 0, scădem 1 din nr, altfel, împărțim nr la 10 și păstrăm doar partea întreagă. Care dintre următorii algoritmi returnează, la apelul  decrementare(nr, k) ,  numărul obținut aplicând de k ori (0 ≤ k ≤ 100) operația de decrementare pe numărul nr? De exemplu, pentru nr = 15243 și k = 10, rezultatul este 151. ",
        "code": "",
        "explanation": "",
        "answers": [
            {
                "text": "\nAlgorithm decrementare(nr, k):\n    If k = 0 then\n        return nr\n    else\n        If nr MOD 10 ≠ 0 then\n     return decrementare(nr - 1, k - 1)\n        Else\n            return decrementare(nr DIV 10, k - 1)\n        EndIf\n    EndIf\nEndAlgorithm\n\n\n"
            },
            {
                "text": "\nAlgorithm decrementare(nr, k):\nWhile k > 0 execute\nIf nr MOD 10 = 0 then\nnr ← nr DIV 10\nelse\nnr ← nr - 1\nEndIf\nk ← k - 1\nEndWhile\nreturn nr\nEnd Algorithm\n\n\n",
                "isCorrect": true
            },
            {
                "text": "\nAlgorithm decrementare(nr, k):\nFor i ← 1, k execute\nIf nr MOD 10 > 0 then\nnr ← nr DIV 10\nelse\nnr ← nr - 1\nEndIf\nEndFor\nreturn nr\nEndAlgorithm\n\n\n\n"
            },
            {
                "text": "\nAlgorithm decrementare(nr, k):\n    If k = 0 then\n        return nr\n    else\n        If k > nr MOD 10 then\n            nr1 ← nr DIV 10\n            return decrementare(nr1,   k - nr MOD 10 - 1)\n        else\n            return decrementare(nr - k, 0)\n        EndIf\n    EndIf\nEndAlgorithm\n\n\nAlgoritmul de mai jos are ca parametri de intrare un vector v cu n numere naturale ( v[1], v[2], …,\nv[n]) și numărul întreg n (1 ≤ n ≤ 10000).\n\nAlgorithm fn(v, n):\n    a ← 0\n    For i ← 1, n execute\n        ok ← True\n        b ← v[i]\n        While (b ≠ 0) AND (ok = True) execute\n            If b MOD 2 = 1 then\n                ok ← False\n            EndIf\n            b ← b DIV 10\n        EndWhile\n        If ok = True then\n            a ← a + 1\n        EndIf\n    EndFor\n    return a\nEndAlgorithm\n\nPrecizați care dintre următoarele afirmații sunt adevărate:\n\n"
            },
            {
                "text": "\nAlgoritmul returnează numărul elementelor impare din vectorul v.\n\n"
            },
            {
                "text": "\nAlgoritmul returnează numărul elementelor din vectorul v care sunt puteri ale lui 2.\n",
                "isCorrect": true
            },
            {
                "text": "\nAlgoritmul returnează numărul elementelor din vectorul v care au în componența lor doar cifre pare.\n\n"
            },
            {
                "text": "\nAlgoritmul returnează numărul elementelor din vectorul v care au în componența lor doar cifre\nimpare.\n\nAlgoritmul magic(s, n) are ca parametri de intrare un șir s cu n caractere ( s[1], s[2], …, s[n]) și\nnumărul întreg n (1 ≤ n ≤ 10000).\n\nAlgorithm magic(s, n):\n    i ← n\n    While 1 ≤ i execute\n        If s[i] ≠ s[n - i + 1] then\n            return 0\n        EndIf\n        i ← i - 1\n    EndWhile\n    return 1\nEndAlgorithm\n\nPrecizați care dintre următoarele afirmații sunt adevărate:\n\n"
            },
            {
                "text": "\nAlgoritmul returnează 1 dacă s are un număr par de caractere.\n\n"
            },
            {
                "text": "\nAlgoritmul returnează 1 dacă s este un palindrom.\n",
                "isCorrect": true
            },
            {
                "text": "\nAlgoritmul are o eroare deoarece expresia n – i + 1 poate avea valori negative în cursul\nexecuției.\n\n"
            },
            {
                "text": "\nAlgoritmul returnează 1 dacă s conține doar caractere alfanumerice."
            }
        ]
    },
    {
        "text": "Se consideră următoarea secvență de cod în pseudocod:    Read a For i ← 1, a - 1 execute     For j ← i + 2, a execute         If i + j > a - 1 then             Write a, \" \", i, \" \", j             Write new line         EndIf     EndFor EndFor Câte perechi de soluții se vor afișa în urma execuției secvenței de cod pentru a = 9? ",
        "code": "",
        "explanation": "",
        "answers": [
            {
                "text": "\n13\n\n"
            },
            {
                "text": "\n15\n\n"
            },
            {
                "text": "\n19\n\n",
                "isCorrect": true
            },
            {
                "text": "\nnici un ul din  celelalte  răspuns uri nu este corect\n\nAlgoritmul ceFace(n)  are ca parametru de intrare un număr natural n (0 ≤ n ≤ 10000).\n\n\nAlgorithm ceFace(n):\n    s ← 0\n    While n > 0 execute\n       c ← n MOD 10\n       If c MOD 2 = 0 then\n           s ← s + c\n       EndIf\n       n ← n DIV 10\n    EndWhile\n    return s\nEndAlgorithm\n\nCe va returna apelul  ceFace(9876) ?\n\n\n",
                "isCorrect": true
            },
            {
                "text": "\n16                    \n"
            },
            {
                "text": "\n48                    \n"
            },
            {
                "text": "\n14                    \n",
                "isCorrect": true
            },
            {
                "text": "\n63\n\nAlgoritmul generare(n)  prelucrează un număr natural n (0 < n < 100).\n\nAlgorithm generare(n):\n    nr ← 0\n    For i ← 1, 1801 execute\n        used[i] ← False\n    EndFor\n    While not  used[n] execute\n        sum ← 0\n        used[n] ← True\n        While n ≠ 0 execute\n            digit ← n MOD 10\n            n ← n DIV 10\n            sum ← sum + digit * digit * digit\n        EndWhile\n        n ← sum\n        nr ← nr + 1\n    EndWhile\n    return nr\nEndAlgorithm\n\n\n  Precizați care dintre următoarele afirmații sunt adevărate:\n\n\n",
                "isCorrect": true
            },
            {
                "text": "\nDacă n = 10, valoarea returnată este 2.  \n"
            },
            {
                "text": "\nDacă n = 10, valoarea returnată este 1.\n\n"
            },
            {
                "text": "\nDacă n = 3, valoarea returnată este 4.\n\n",
                "isCorrect": true
            },
            {
                "text": "\nCele două apeluri generare(3)  și generare(30)  vor returna aceeași valoare.",
                "isCorrect": true
            }
        ]
    },
    {
        "text": "Se dă algoritmul f(a, b ) care primește ca parametri două numere naturale a și b (1 ≤ a < b ≤ 1000): Din păcate, algoritmul se autoapelează de o infinitate de ori. Precizați care este valoarea pe care o va avea parametrul  b, atunci când parametrul  a devine 0  pentru prima dat ă. Algoritmul se apelează cu instrucțiunea: c ← f(20, 10) ",
        "code": "Algorithm f(a, b):\nIf a > 0 then\nreturn b + f(a DIV 2, b * 2)\nEndIf\nreturn b + f(a * 2, b DIV 2)\nEndAlgorithm",
        "explanation": "",
        "answers": [
            {
                "text": "\n100\n\n",
                "isCorrect": true
            },
            {
                "text": "\n160\n\n"
            },
            {
                "text": "\n320\n\n",
                "isCorrect": true
            },
            {
                "text": "\n640"
            }
        ]
    },
    {
        "text": "Precizați care dintre următoarele expresii are valoarea adevărat dacă și numai dacă numărul natural n este divizibil cu 3 și are ultima cifră 4 sau 6: ",
        "code": "",
        "explanation": "",
        "answers": [
            {
                "text": "\n(n MOD 3 = 0) OR ((n MOD 10 = 4) AND (n MOD 10 = 6))\n\n"
            },
            {
                "text": "\n(n MOD 6 = 0) AND ((n MOD 10 = 4) OR (n MOD 10 = 6))\n\n",
                "isCorrect": true
            },
            {
                "text": "\n((n MOD 9 = 0) AND (n MOD 10 = 4)) OR ((n MOD 3 = 0) AND (n MOD 10 = 6))\n\n"
            },
            {
                "text": "\n(n MOD 3 = 0) AND (((n MOD 2 = 0) AND (n MOD 5 = 0)) OR ((n MOD 2 = 0) AND (n MOD 5 = 1)))",
                "isCorrect": true
            }
        ]
    },
    {
        "text": "Se consideră următoarea expresie logică (X OR Z) AND (X OR Y). Alegeți valorile pentru X, Y, Z astfel încât evaluarea expresiei să dea rezultatul True: ",
        "code": "",
        "explanation": "",
        "answers": [
            {
                "text": "\nX ← False; Y ← False; Z ← True;\n\n",
                "isCorrect": true
            },
            {
                "text": "\nX ← True; Y ← False; Z ← False;\n\n"
            },
            {
                "text": "\nX ← False; Y ← True; Z ← False;\n\n",
                "isCorrect": true
            },
            {
                "text": "\nX ← True; Y ← True; Z ← True;"
            }
        ]
    },
    {
        "text": "Se consideră toate șirurile de lungime l ϵ {1, 2, 3} formate din litere din mulțimea { a, b, c, d, e}. Câte dintre aceste șiruri au elementele ordonate strict c rescător (conform alfabetului) și un număr impar de consoane? ( b, c și d sunt consoane) ",
        "code": "",
        "explanation": "",
        "answers": [
            {
                "text": "\n14\n\n",
                "isCorrect": true
            },
            {
                "text": "\n13\n\n"
            },
            {
                "text": "\n26\n\n"
            },
            {
                "text": "\n81",
                "isCorrect": true
            }
        ]
    },
    {
        "text": " Se dorește afișarea unui pătrat împreună cu diagonalele sale folosind doar caracterele * (asterisc) și . (punct) (pentru spațiul din interiorul pătratului cu excepția diagonalelor). Exemplul de mai jos ilustrează un pătrat având laturile de n = 6 asteriscu ri. Pentru acesta a fost necesară utilizarea a 28 asteriscuri și 8 puncte.  * * * * * * * * . . * * * . * * . * * . * * . * * * . . * * * * * * * * Care din afirmațiile de mai jos sunt adevărate? ",
        "code": "",
        "explanation": "",
        "answers": [
            {
                "text": "\nPentru n = 5, este nevoie de exact 22 asteriscuri și 4 puncte.\n\n",
                "isCorrect": true
            },
            {
                "text": "\nPentru n =7, este nevoie de exact 34 asteriscuri și 15 puncte.\n\n"
            },
            {
                "text": "\nPentru n =7, este nevoie de exact 33 asteriscuri și 16 puncte.\n\n"
            },
            {
                "text": "\nPentru n =18, este nevoie de exact 100 asteriscuri și 224 puncte."
            }
        ]
    },
    {
        "text": "Se consideră algoritmul  ceFace(T, n, e) , care primește ca și parametru un șir T cu n numere naturale ordonate crescător ( T[1], T[2], …, T[n]) și numerele naturale n și e (1 ≤ n, e ≤ 10000). Precizați care dintre următoarele afirmații sunt adevărate: ",
        "code": "Algorithm ceFace(T, n, e):\nIf e MOD 2 = 0 then\na ← 1\nb ← n\nWhile a ≤ b execute\nm ← (a + b) DIV 2\nIf e < T[m] then\nb ← m - 1\nelse\nIf e > T[m] then\na ← m + 1\nelse\nreturn m\nEndIf\nEndIf\nEndWhile\nreturn 0\nelse\nc ← 1\ng ← 0\nWhile (c ≤ n) AND (g = 0) execute\nIf e = T[c] then\ng = c\nEndIf\nc ← c + 1\nEndWhile\nreturn g\nEndIf\nEndAlgorithm",
        "explanation": "",
        "answers": [
            {
                "text": "\nAlgoritmul returnează 0 dacă numărul e nu se află în șirul T.\n\n",
                "isCorrect": true
            },
            {
                "text": "\nDacă numărul e este impar și se află în șirul T, algoritmul returnează poziția din șirul T pe care se\naflă e folosind algoritmul de căutare binară.\n\n"
            },
            {
                "text": "\nDacă numărul e este impar și se află în șirul T, algoritmul returnează poziția din șirul T pe care se\naflă e folosind alg oritmul de căutare secvențială.\n"
            },
            {
                "text": "\nAlgoritmul returnează poziția din șirul T pe care se află numărul e."
            }
        ]
    },
    {
        "text": "Se consideră algoritmul calcul(x, n) , unde parametrii de intrare sunt numerele naturale n și x, având proprietatea  1 ≤ x ≤ n < 10. Precizați care dintre următoarele afirmații sunt adevărate: ",
        "code": "Algorithm calcul(x, n):\n    b ← 1\n    For i ← 1, n - x execute\n        b ← b + i\n    EndFor\n    a ← b\n    For i ← n – x + 1, n execute\n        a ← a + i\n    EndFor\n    return a - b\nEndAlgorithm",
        "explanation": "",
        "answers": [
            {
                "text": "\nDacă n = 5 și x = 2, atunci algoritmul returnează 20.\n\n"
            },
            {
                "text": "\nDacă n = 3 și x = 2, atunci algoritmul returnează 5.\n"
            },
            {
                "text": "\nAlgoritmul returnează  cardinalitatea mulțimii { 𝑐1𝑐2…𝑐𝑥  : ci ≠ cj ∀ 1 ≤ i, j ≤ x, i ≠ j,  1 ≤ ci ≤ n}\n\n",
                "isCorrect": true
            },
            {
                "text": "\nAlgoritmul returnează întotdeauna o valoare strict mai mare decât 0."
            }
        ]
    },
    {
        "text": "Se dă algoritmul s(a, b, c),  unde a, b, c sunt numere naturale pozitive (1 ≤ a, b, c ≤ 10000). ",
        "code": "Algorithm s(a, b, c):\nIf (a = 1) OR (b = 1) OR (c = 1) then\nreturn 1\nelse\nIf a > b then\nreturn a * s(a - 1, b, c)\nelse\nIf a < b then\nreturn b * s(a, b - 1, c)\nelse\nreturn c * s(a - 1, b - 1, c - 1)\nEndIf\nEndIf\nEndIf\nEndAlgorithm",
        "explanation": "",
        "answers": []
    },
    {
        "text": "20a. Precizați care dintre următoarele afirmații sunt adevărate în cazul în care a = b și a < c: ",
        "code": "",
        "explanation": "",
        "answers": [
            {
                "text": "\nAlgoritmul calculează și returnează c! / (c - a)!\n"
            },
            {
                "text": "\nAlgoritmul calculează și returnează c! / (c – a + 1)!\n\n"
            },
            {
                "text": "\nAlgoritmul calculează și returnează c! / (c – a - 1)!\n"
            },
            {
                "text": "\nAlgoritmul calculează și returnează combinări de c luate câte ( a - 1)",
                "isCorrect": true
            }
        ]
    },
    {
        "text": "20b. Pentru a = 3, b = 4, c = 7, algoritmul returnează: ",
        "code": "",
        "explanation": "",
        "answers": [
            {
                "text": "\n224\n"
            },
            {
                "text": "\n56\n",
                "isCorrect": true
            },
            {
                "text": "\n336\n"
            },
            {
                "text": "\n168"
            }
        ]
    },
    {
        "text": " Se consideră algoritmul  numere(a, b, c, d, e) , care primește ca parametri cinci numere întregi a, b, c, d și e (1 ≤ a, b ≤ 10000, 2 ≤ c ≤ 16, 1 ≤ d < c). Precizați care dintre următoarele afirmații sunt adevărate pentru apelul numere(a, b, c, d, 0)  : ",
        "code": "Algorithm numere(a, b, c, d, e):\n    If a = 0 AND b = 0 then\n        If e = 0 then\n            return True\n        else\n            return False\n        EndIf\n    EndIf\n    If a MOD c = d then\n        e = e + 1\n    EndIf\n    If b MOD c = d then\n        e = e – 1\n    EndIf\n    return numere(a DIV c, b DIV c, c, d, e)\nEndAlgorithm",
        "explanation": "",
        "answers": [
            {
                "text": "\nAlgoritmul returnează True dacă reprezentările în baza c a numerelor a și b conțin cifra d de\nnumăr egal de ori, False  în caz contrar\n\n"
            },
            {
                "text": "\nAlgoritmul returnează True dacă cifra d apare în reprezentarea în baza c a numărului a și în\nreprezentarea în baza c a numărului b, False  în caz contrar\n\n"
            },
            {
                "text": "\nApelul numere(a, b, c, d, 0)  returnează  aceeași valoare ca și apelul numere(b, a, c, d, 0)\n"
            },
            {
                "text": "\nAlgoritmul returnează True  dacă  cifra d apare pe aceleași poziții în reprezentarea în baza c a\nnumerelor a și b, False  în caz contrar",
                "isCorrect": true
            }
        ]
    },
    {
        "text": "Fie s un șir de numere naturale unde elementele si sunt de forma si = {𝑥,                       dacă 𝑖=1 𝑥+1,               dacă 𝑖=2 𝑠(𝑖−1)@𝑠(𝑖−2)  dacă 𝑖>2   , (i = 1, 2, ...). Operatorul @ concatenează cifrele operandului stâng cu cifrele operandului drept, în această ordine (cifre aferente reprezentării în baza 10), iar x este un număr natural (1 ≤ x ≤ 99). De exemplu, dacă x  = 3, șirul s va conține valorile 3, 4, 43, 434,  43443, ... . Pentru un numar natural k (1 ≤  k ≤ 30) precizați  numărul  cifrelor  acelui  termen  din șirul s care precede  termenul  format  din k1 cifre, unde k1 este cel mai mic număr cu proprietatea că k ≤ k1 ≤ 30 și există un termen format din k1 cifre. ",
        "code": "",
        "explanation": "",
        "answers": [
            {
                "text": "\ndacă x = 15 și k = 8, numărul cifrelor termenului căutat este 6.\n"
            },
            {
                "text": "\n dacă x = 2 și k = 6, numărul cifrelor termenului căutat este 6.\n",
                "isCorrect": true
            },
            {
                "text": "\n dacă  x = 14 și k = 27, numărul cifrelor termenului căutat este 26.\n",
                "isCorrect": true
            },
            {
                "text": "\ndacă x = 5 și k = 12, numărul cifrelor termenului căutat este 8."
            }
        ]
    },
    {
        "text": " Se consideră următorul algoritm recursiv fibonacci(n) , unde n este un număr natural (1 ≤ n ≤ 100).   Să se determine de câte ori se afișează mesajul “Aici ” în cazul unui apel fibonacci(n) .   ",
        "code": "Algorithm fibonacci(n):\n    If n ≤ 1 then\n        Write \"Aici\"\n        return 1\n    else\n        return fibonacci(n - 1) + fibonacci(n - 2)\n    EndIf\nEndAlgorithm",
        "explanation": "",
        "answers": [
            {
                "text": "\nDe fibonacci(n)  ori.\n\n",
                "isCorrect": true
            },
            {
                "text": "\nDe fibonacci(n -1) ori.\n\n"
            },
            {
                "text": "\nDe fibonacci(n) -1 ori.\n\n"
            },
            {
                "text": "\nDe fibonacci(n) - fibonacci(n -1) ori.",
                "isCorrect": true
            }
        ]
    }
]