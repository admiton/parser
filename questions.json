[
    {
        "question": "Let us consider the algorithm  F(x), where  x is a natural number (1 ≤ x ≤ 106): Which of the following function calls will return 4? ",
        "answers": [
            {
                "A": "F(21369)"
            },
            {
                "B": "F(6933)"
            },
            {
                "C": "F(4)"
            },
            {
                "D": "F(16639)"
            }
        ],
        "code": "Algorithm  F(x):\n    If x = 0 then\n        Return 0\n    Else\n        If x MOD 3 = 0 then\n            Return F(x DIV 10) + 1\n        Else\n            Return F(x DIV 10)\n        EndIf\n    EndIf\nEndAlgorithm",
        "correct_answers": "AB",
        "index": 1
    },
    {
        "question": "Let us consider the algorithm  ceFace(a, b) , where  a and b are natural  numbers  (1 ≤ a, b ≤ 104) which do not contain the digit 0 . The algorithm  ceFace(a, b)  returns  True  if and only if : ",
        "answers": [
            {
                "A": "a and b are equal"
            },
            {
                "B": "a and b are palindromes"
            },
            {
                "C": "a is the reverse number of  b"
            },
            {
                "D": "the last digit of  a equals the last digit of  b"
            }
        ],
        "code": "Algorithm  ceFace(a, b):\n    p ← 0\n    While a ≠ 0 execute\n        c ← a MOD 10\n        p ← p * 10 + c\n        a ← a DIV 10\n    EndWhile\n    If p = b then\n        Return True\n    Else\n        Return False\n    EndIf\nEndAlgoritm",
        "correct_answers": "C",
        "index": 2
    },
    {
        "question": "Let us consider the algorithm  ceFace(n) , where  n is a natural number  (1 ≤ n ≤ 103). The operator  „/” represents real division , for example : 3 / 2 = 1.5. The value of which expression is returned by the  algorit hm? ",
        "answers": [
            {
                "A": "1\n1+ 1\n1+2+⋯+1\n1+2+⋯+𝒏"
            },
            {
                "B": "1\n2∗3+ 2\n3∗4 +⋯+𝑛\n(𝒏+1)∗(𝒏+2)"
            },
            {
                "C": "1\n1+ 1\n1∗2+⋯+1\n1∗2∗…∗𝒏"
            },
            {
                "D": "1\n2∗3+ 2\n3∗4 +⋯+𝒏−1\n𝒏∗(𝒏+1) 2"
            }
        ],
        "code": "Algorithm  ceFace(n):\n    s ← 0\n    For i ← 1, n execute\n        p ← (i + 1) * (i + 2)\n        s ← s + (i / p)\n    EndFor\n    Return s\nEndAlgorithm",
        "correct_answers": "B",
        "index": 3
    },
    {
        "question": "Let us consider the algorithm  f(n, x) , where  n is a natural number  (3 ≤ n ≤ 104), and x is an array of  n natural numbers  (x[1], x[2], ..., x[n], 1 ≤ x[i] ≤ 104, for i = 1, 2, ..., n). Which of the following function calls will return True ? ",
        "answers": [
            {
                "A": "f(6, [1000, 512, 23, 22, 1, 2])"
            },
            {
                "B": "f(6, [6, 4, 1, 1, 2, 3])"
            },
            {
                "C": "f(8, [3000, 2538, 799, 424, 255, 256, 299, 1001])"
            },
            {
                "D": "f(3, [3, 2, 1])"
            }
        ],
        "code": "Algorithm f(n, x):\n    k ← 0\n    For i ← 1, n - 1 execute\n        If k = 0 then\n            If x[i] = x[i + 1] then\n                Return False\n            EndIf\n            If x[i] < x[i + 1] then\n                k ← 1\n            EndIf\n        EndIf\n        If k = 1 then\n            If x[i]  x[i + 1] then\n                Return False\n            EndIf\n        EndIf\n    EndFor\n    If x[n - 1]  x[n] then\n        Return False\n    EndIf\n    Return True\nEndAlgorithm",
        "correct_answers": "AC",
        "index": 4
    },
    {
        "question": "Let us consider the algorithm  calcul(a, b, c, d) , where  a, b, c, d are natural numbers  (1 ≤ a, b, c, d ≤ 100). Which of the following statements are true ? ",
        "answers": [
            {
                "A": "The algorithm returns the greatest common divisor of\nthe numbers a, b, c, d."
            },
            {
                "B": "The algorithm returns the greatest common divisor of\nthe numbers a * b and c * d."
            },
            {
                "C": "The algorithm returns the least common multiple of the\nnumbers a, b, c, d."
            },
            {
                "D": "The algorithm returns the least common multiple of the\nnumbers a * b and c * d."
            }
        ],
        "code": "Algorithm  calcul(a, b, c, d):\n    x ← a * b\n    y ← c * d\n    While y ≠ 0 execute\n        z ← x MOD y\n        x ← y\n        y ← z\n    EndWhile\n    Return x\nEndAlgorithm",
        "correct_answers": "B",
        "index": 5
    },
    {
        "question": "Let u s consider the algorithm  p(na, a, nb, b) , where  na and nb are natural numbers  (0 ≤ na, nb ≤ 104), a and b are arrays of  na, respectively  nb natural numbers  (a[1], a[2], ..., a[na], 1 ≤ a[i] ≤ 104, for i = 1, 2, ..., na and b[1], b[2], ..., b[nb], 1 ≤ b[i] ≤ 104, for i = 1, 2, ..., nb). The local variable  c is an array . Which of the following statements are true? ",
        "answers": [
            {
                "A": "If na = 0 and nb = 0, then the value returned by nc is\nequal to 0."
            },
            {
                "B": "If the elements from  a and b are in ascending order ,\nthen the elements stored in  c are in ascending order ."
            },
            {
                "C": "The value returned through  nc is always equal to  na\n+ nb."
            },
            {
                "D": "If na, nb > 0 and the greatest element of  a is smaller\nthan all elements of  b, then c will have the same\nelements as  a. 3"
            }
        ],
        "code": "Algorithm p(na, a, nb, b):\n    i ← 1\n    j ← 1\n    nc ← 0\n    While i ≤ na AND j ≤ nb execute\n        nc ← nc + 1\n        If a[i] < b[j] then\n            c[nc] ← a[i]\n            i ← i + 1\n        Else\n            c[nc] ← b[j]\n            j ← j + 1\n        EndIf\n    EndWhile\n    Return nc\nEndAlgorithm",
        "correct_answers": "ABD",
        "index": 6
    },
    {
        "question": "Let us consider the algorithm  suma(n, a, m, b) , where  n and m are natural numbers  (1 ≤ n, m ≤ 105),  a and b are two arrays in ascending order  having  as elements n, respectively  m natural numbers  (a[1], a[2], …, a[n] and b[1], b[2], …, b[m]): What value will the algorithm return , if n = 4, a = [1, 3, 4, 7], m = 6 and b = [2, 4, 6, 8, 10, 12]? ",
        "answers": [
            {
                "A": "42"
            },
            {
                "B": "22"
            },
            {
                "C": "20"
            },
            {
                "D": "It is not possible to determine the value that the\nalgorithm will return."
            }
        ],
        "code": "Algorithm  suma(n, a, m, b):\n    s ← 0\n    For i ← 1, n, 2 execute\n        j ← 1\n        While j ≤ a[i] AND j ≤ m execute\n            s ← s + b[j]\n            j ← j + 1\n        EndWhile\n    EndFor\n    Return s\nEndAlgorithm",
        "correct_answers": "B",
        "index": 7
    },
    {
        "question": "Let us consider the  algorithm  verifica(n, p1, p2) , where  n, p1 and p2 are natural numbers  (1 ≤ n, p1, p2 ≤ 106): Which of the following statements are true ? ",
        "answers": [
            {
                "A": "If p1, p2 and n are relatively  prime , then the algorithm\nverifica(n, p1, p2)  return s True ."
            },
            {
                "B": "The algorithm uses the binary search method and if  n is\nprim e, the call  verifica(n, 1, n)  return s True ."
            },
            {
                "C": "For the call  verifica(n, 1, n)  the algorithm  return s\nTrue  if and only if   n is a square number ."
            },
            {
                "D": "If p1 ≤ n ≤ p2 and in each of the intervals  [p1, n] and [n,\np2] there exist s at least one square number,  then the call\nverifica(n, p1, p2)  return s True ."
            }
        ],
        "code": "Algorithm  verifica(n, p1, p2):\n    bt ← (p1 + p2) DIV 2\n    If p1 > p2 then\n        Return False\n    EndIf\n    If bt * bt = n then\n        Return True\n    EndIf\n    If bt * bt > n then\n        Return verifica(n, p1, bt - 1)\n    EndIf\n    Return verifica(n, bt + 1, p2)\nEndAlgorithm",
        "correct_answers": "C",
        "index": 8
    },
    {
        "question": "Let us consider the algorithm  ceFace(n) , where  n is a natural number  (1 ≤ n ≤ 3000). Which of the following statements are true ? ",
        "answers": [
            {
                "A": "If n = 36, the algorithm returns  True ."
            },
            {
                "B": "If n is equal to a sum of odd consecutive numbers  starting from\n1, the algorit hm return s True ."
            },
            {
                "C": "If n is a square number , the algorithm  return s True , otherwise\nit return s False ."
            },
            {
                "D": "If n = 64, the algorit hm return s False ."
            }
        ],
        "code": "Algorithm  ceFace(n):\n    s ← 0\n    i ← 1\n    While s < n execute\n        s ← s + i\n        If s = n then\n            Return True\n        Else\n            i ← i + 2\n        EndIf\n    EndWhile\n    Return False\nEndAlgorithm",
        "correct_answers": "ABC",
        "index": 9
    },
    {
        "question": "Let us consider the algorit hm ceFace(a) , where  a is a natural number  (1 ≤ a ≤ 104). Which of the following statements are true? ",
        "answers": [
            {
                "A": "The algorithm returns the smallest palindrome greater\nthan or equal to  a."
            },
            {
                "B": "The algorithm returns the largest palindrome smaller than\nor equal to a."
            },
            {
                "C": "The algorithm returns the smallest palindrome greater\nthan a."
            },
            {
                "D": "The algorithm returns the smallest even number greater\nthan a. 4"
            }
        ],
        "code": "Algorithm  ceFace(a):\n    ok ← 0\n    While ok = 0 execute\n        b ← a\n        c ← 0\n        While b ≠ 0 execute\n            c ← c * 10 + b MOD 10\n            b ← b DIV 10\n        EndWhile\n        If c = a then\n            ok ← 1\n        Else\n            a ← a + 1\n        EndIf\n    EndWhile\n    Return a\nEndAlgorithm",
        "correct_answers": "A",
        "index": 10
    },
    {
        "question": "Let us consider  the algorit hm calcul(v, n) , where  n is a natural  number  (1 ≤ n ≤ 104), and v is an array of n natural  numbers (v[1], v[2], ..., v[n], 1 ≤ v[i] ≤ 104, for i = 1, 2, ..., n): In which of the following situations does the algorithm return True ? ",
        "answers": [
            {
                "A": "If the array  v contains the values  [2, 3, 10, 7,\n20, 5, 18] and n = 7"
            },
            {
                "B": "If the array  v has values according to the\nfollowing pattern : odd, even , odd, even ..."
            },
            {
                "C": "If the array  v contains the values  [3, 8, 17, 20,\n15, 10] and n = 6"
            },
            {
                "D": "If the array  v has values according to the\nfollowing pattern: even, odd, even, odd..."
            }
        ],
        "code": "Algorithm  calcul(v, n):\n    i ← 2\n    x ← 0\n    If v[1] MOD 2 ≠ 0 then\n        Return False\n    EndIf\n    While i ≤ n execute\n        If x = 0 AND v[i] MOD 2 = 0 then\n            Return False\n        Else\n            If x = 1 AND v[i] MOD 2 = 1 then\n                Return False\n            Else\n                i ← i + 1\n                x ← (x + 1) MOD 2\n            EndIf\n        EndIf\n    EndWhile\n    Return True\nEndAlgorithm",
        "correct_answers": "AD",
        "index": 11
    },
    {
        "question": "Let us consider  the algorit hm ceFace(a, n) , where  n is a natural number   (2 ≤ n ≤ 104) and a is an array  of n integer numbers  (a[1], a[2], ..., a[n], -100 ≤ a[i] ≤ 100, i = 1, 2, ..., n). In the array  a there is at least one positive number . Which of the following statements are true? ",
        "answers": [
            {
                "A": "The algorithm returns the sum of all elements\nof the array  a."
            },
            {
                "B": "The algorithm returns the sum of the elements\nof the subarray  of maximum length  that\ncontains only positi ve elements from array a."
            },
            {
                "C": "The algorithm returns the sum of all positive\nelements in the array a."
            },
            {
                "D": "The algorithm returns the sum of a  subarray\nwith the maximum sum from  array a."
            }
        ],
        "code": "Algorithm ceFace(a, n):\n    b ← 0\n    c ← b\n    For i ← 1, n execute\n        b ← b + a[i]\n        If b < 0 then\n            b ← 0\n        EndIf\n        If b > c then\n            c ← b\n        EndIf\n    EndFor\n    Return c\nEndAlgorithm",
        "correct_answers": "D",
        "index": 12
    },
    {
        "question": "Let us consider the matrix A of integer numbers  with n rows and m columns  (1 ≤ n, m ≤ 104). Considering  that n * m = p * q, we intend to resize  this matri x to a matrix  B of integer numbers  having  p rows  and q columns  (1 ≤ p, q ≤ 104), as in the example below , where  n = 4, m = 6, p = 3 and q = 8. Rows  and columns  are indexed starting from 1. A: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 B: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 Which of the following options presents an algorithm that, for the pair of natural numbers i and j (1 ≤ i ≤ n, 1 ≤ j ≤ m) that represent indexes in matrix  A, will return the pair of  indexes from  B corresponding to the value  A[i][j]? ",
        "answers": [
            {
                "A": "Algorithm  reshape(i, j, n, m, p, q):\n    Return (i * m + j) DIV q, (i * m + j) MOD q\nEndAlgorithm"
            },
            {
                "B": "Algorithm  reshape(i, j, n, m, p, q):\n    i ← i – 1\n    j ← j - 1\n    Return (i * m + j) DIV q, (i * m + j) MOD q\nEndAlgorithm"
            },
            {
                "C": "Algorithm  reshape(i, j, n, m, p, q):\n    i ← i – 1\n    j ← j – 1\n    Return (i * m + j) DIV q + 1,\n(i * m + j) MOD q + 1\nEndAlgorithm"
            },
            {
                "D": "Algorithm  reshape(i, j, n, m, p, q):\n    Return (i * m + j - 1) DIV q + 1,\n(i * m + j - 1) MOD q + 1\nEndAlgorithm\n\n5"
            }
        ],
        "code": "",
        "correct_answers": "C",
        "index": 13
    },
    {
        "question": "Let us consider the algorit hm ceFace(n, m) , where  n is a natural  number  (1 ≤ n ≤ 104), and m is a matrix  with n rows  and n columns, and its element s are natural  numbers  (m[1][1] , ..., m[1][n], m[2][1] , ..., m[2][n], ..., m[n][1], ..., m[n][n]). Let us consider that the element s of matri x m are initially equal to  0. Which of the following statements are FALSE ? ",
        "answers": [
            {
                "A": "If n = 11, the value of  m[6][4] is 21"
            },
            {
                "B": "If n = 7, the value of  m[3][5] is 4"
            },
            {
                "C": "If n = 10, the value of m[6][4] is 21"
            },
            {
                "D": "If n = 7, the maximum value  in the matrix\nis 8"
            }
        ],
        "code": "Algorithm ceFace(n, m):\n    a ← 0\n    b ← 1\n    For j ← 1, n execute\n        i ← 1\n        While i + j ≤ n – 1 execute\n            If (i MOD 2 = 1) AND (j MOD 2 = 1) then\n                m[i][j] ← b\n                c ← a + b\n                a ← b\n                b ← c\n            EndIf\n            i ← i + 1\n        EndWhile\n    EndFor\nEndAlgorithm",
        "correct_answers": "ABC",
        "index": 14
    },
    {
        "question": "The algorithms below process an ascending sorted array x, having  n natural numbers elements  (1 ≤ n ≤ 104, x[1], x[2], ..., x[n]). Paramet ers first and last are natural  numbers  (1 ≤ first ≤ last ≤ n). Choose the algorithms that have the lowest time complexity when called in the form of A(x, 1, n, n) . ",
        "answers": [
            {
                "A": "Algorithm  A(x, first, last, n):\n    If first > last then\n        Return 0\n    EndIf\n    m ← (first + last) DIV 2\n    If x[m] = n then\n        Return m\n    Else\n        If x[m] > n then\n            Return A(x, first, m - 1, n)\n        Else\n            If x[m] < n then\n                Return A(x, m + 1, last, n)\n            EndIf\n        EndIf\n    EndIf\nEndAlgorithm"
            },
            {
                "B": "Algorithm  A(x, first, last, n):\n    While first < last  execute\n        m ← (first + last) DIV 2\n        If x[m] = n then\n            Return m\n        Else\n            If x[m] > n then\n                last ← m - 1\n            Else\n                If x[m] < n then\n                    first ← m + 1\n                EndIf\n            EndIf\n        EndIf\n    EndWhile\n    Return 0\nEndAlgorithm"
            },
            {
                "C": "Algorithm  A(x, first, last, n):\n    For i ← first, last execute\n        If x[i] = n then\n            Return i\n        EndIf\n    EndFor\n    Return 0\nEndAlgorithm"
            },
            {
                "D": "Algorithm  A(x, first, last, n):\n    For i ← first, last execute\n        If x[i] = n then\n            x[i] ← 3 * n\n        EndIf\n    EndFor\nEndAlgorithm"
            }
        ],
        "code": "",
        "correct_answers": "AB",
        "index": 15
    },
    {
        "question": "Andrei is playing with the following algorit hm, where  n and m are non-zero natural numbers (1 ≤ n, m ≤ 104). The a lgorit hm abs(x) returns  the absolute value of  x. He observes that regardless of the value of the variable n corresponding to the specification, there are at least two values of m for which the algorithm problema(n,  m) returns 0. What are these values of m? ",
        "answers": [
            {
                "A": "1 and n"
            },
            {
                "B": "1 and n + 2"
            },
            {
                "C": "n and n + 2"
            },
            {
                "D": "1 and n – 2 6"
            }
        ],
        "code": "Algorithm problema(n, m) :\n    b ← abs(m - n)\n    c ← n - m\n    If b - c = 0 then\n        a ← n MOD m\n    Else\n        a ← (m + 2) MOD n\n    EndIf\n    Return a\nEndAlgorithm",
        "correct_answers": "A",
        "index": 16
    },
    {
        "question": "A student wants to generate, using the backtracking method, all odd numbers with three digits, with digits taken from the array  [4, 3, 8, 5, 7, 6], in the given order. Knowing that the first 5 generated numbers are, in this order: 443, 445, 447, 433, 435, what will be the tenth generated number? ",
        "answers": [
            {
                "A": "487"
            },
            {
                "B": "453"
            },
            {
                "C": "457"
            },
            {
                "D": "455"
            }
        ],
        "code": "",
        "correct_answers": "B",
        "index": 17
    },
    {
        "question": "Let us consider  the algorit hm f(k, n, x) , where  k, n are natural  numbers  (1 ≤ k, n ≤ 103) and x is an array of n natural  numbers  (x[1], x[2], …, x[n], 1 ≤ x[i] ≤ 104, for i = 1, 2, ..., n). Which of the following statements are true ? ",
        "answers": [
            {
                "A": "For x = [4, 9, 26, 121] the result of the call\nf(1, 4, x)  will be 3."
            },
            {
                "B": "For x = [4, 8, 6, 144] the result of the call  f(2,\n4, x)  will be 3."
            },
            {
                "C": "For x = [4, 9, 25, 144] the result of the call\nf(1, 4, x)  will be 3."
            },
            {
                "D": "For x = [8, 27, 25, 121] the result of the call\nf(2, 4, x)  will be 3."
            }
        ],
        "code": "Algorithm  f(k, n, x):\n    If n = 0 then\n        Return 0\n    Else\n        d ← 0\n        For i ← 2, x[n] DIV 2 execute\n            If (x[n] MOD i) = 0 then\n                d ← d + 1\n            EndIf\n        EndFor\n        If d = k then\n            Return 1 + f(k, n - 1, x)\n        Else\n            Return f(k, n - 1, x)\n        EndIf\n    EndIf\nEndAlgorithm",
        "correct_answers": "AC",
        "index": 18
    },
    {
        "question": "Let us consider the algorit hm check(n) , where  n is a natural  number  (1 ≤ n ≤ 105). Specify the effect of the algorithm . ",
        "answers": [
            {
                "A": "The algorithm returns True  if n is a power of  3 and False  otherwise ."
            },
            {
                "B": "The algorithm returns True  if the representation of n in base 3\ncontains only  digits 0 and 1 and False  otherwise ."
            },
            {
                "C": "The algorithm returns True  if n can be written as a power of 3 or as a\nsum of distinct powers of 3  and False  otherwise ."
            },
            {
                "D": "The algorithm returns True  if the representation of n in base 3\ncontains only digit 2 and False  otherwise ."
            }
        ],
        "code": "Algorithm check(n):\n    While n > 0 execute\n        If n MOD 3 > 1 then\n            Return False\n        EndIf\n        n ← n DIV 3\n    EndWhile\n    Return True\nEndAlgorithm",
        "correct_answers": "BC",
        "index": 19
    },
    {
        "question": "One event was supposed to take place in a certain room  I, but must be moved to room  II, where the numbering of the seats is different . In both rooms there are L rows of chair s (2 ≤ L ≤ 50), each row is divided halfway  by an aisle and has  K chairs  (2 ≤ K ≤ 50) on each side of the aisle (hence , the room has a total of  2 * K * L chairs ). In room  I, each seat is identifi ed by a single number . The seats on the left of the aisle have even  numbers , and the numbering  of seats begins  with the row in front of the scene . Therefore,  the chairs in the front row have numbers (starting from the aisle toward the edge  of the room ) 2, 4, 6 etc. After all the chairs from a row were numbered,  the numbering on the following row  begins with the chair next to the aisle using  the next even number . The seats on the right of the aisle are numbered similarly but  using odd numbers . Hence, the chairs in the first row have the numbers (starting from the aisle toward the edge of the room) 1, 3, 5 etc. In room  II each seat is identified by three values . Row number (a value between  1 and L, row 1 being the one in front of the  scene), the direction of the seat related to the aisle  (value \"stânga\"  (left)  or \"dreapta\"  (right) ) and the number of the seat in that row  (a value between  1 and K, chair  1 being next to the ais le). Since the event must be relocated , the seats on the tickets for room  I (given by a single number ) must  be transformed to valid  seats in room II (given by  row, seat, direc tion). Which of the following algorithms, given input data L, K, nrLoc  according to the statement, correctly performs the transformation? A transformation is considered correct if each spectator will have a unique seat in room II. 7 ",
        "answers": [
            {
                "A": "Algorithm  transforma(L, K, nrLoc):\n    If nrLoc MOD 2 = 1 then\n        directie ← \" dreapta\"\n        nrLoc ← nrLoc + 1\n    Else\n        directie ← \"stanga\"\n    EndIf\n    If nrLoc MOD (2 * K) = 0 then\n        rand ←  nrLoc DIV (2 * K)\n    Else\n        rand ← nrLoc DIV (2 * K) + 1\n    EndIf\n    loc ← (nrLoc - (rand - 1) * 2 * K) DIV 2\n    Return rand, loc, directie\nEndAlgorithm"
            },
            {
                "B": "Algorithm  transforma(L, K, nrLoc):\n    If nrLoc MOD 2 = 1 then\n        directie ← \"dreapta\"\n    Else\n        directie ← \"stanga\"\n    EndIf\n    If nrLoc MOD (2 * K) = 0 then\n        rand ← nrLoc DIV (2 * K)\n    Else\n        rand ← nrLoc DIV (2 * K) + 1\n    EndIf\n    loc ← (nrLoc - (rand - 1) * 2 * K) DIV 2\n    Return rand, loc, directie\nEndAlgorithm"
            },
            {
                "C": "Algorithm  transforma(L, K, nrLoc):\n    If nrLoc MOD 2 = 1 then\n        directie ← \"dreapta\"\n        nrLoc ← nrLoc + 1\n    Else\n        directie ← \"stanga\"\n    EndIf\n    rand ← nrLoc DIV (2 * K) + 1\n    loc ← (nrLoc - (rand - 1) * 2 * K) DIV 2\n    Return rand, loc, directie\nEndAlgorithm"
            },
            {
                "D": "Algorithm  transforma(L, K, nrLoc):\n    If nrLoc MOD 2 = 1 then\n        directie ← \"dreapta\"\n        nrLoc ← nrLoc + 1\n    Else\n        directie ← \"stanga\"\n    EndIf\n    If nrLoc MOD (2 * K) = 0 then\n        rand ← nrLoc DIV (2 * K)\n    Else\n        rand ← nrLoc DIV (2 * K) + 1\n    EndIf\n    loc ← (nrLoc - (rand - 1) * 2 * K) DIV 2 + 1\n    Return rand, loc, directie\nEndAlgorithm"
            }
        ],
        "code": "",
        "correct_answers": "A",
        "index": 20
    },
    {
        "question": "Let us consider algorit hm p(x, n, k, final) , where  x is an array  of n + 1 natural  numbers  (x[0], x[1], ..., x[n]). Initially  x[i] = 0, for i = 0, 1, 2, ..., n. Variab les n and k are non-zero natural numbers  (1 ≤ n, k ≤ 20), and final  is of type boolean . The a lgorit hm Afis(x, 1, n) displays the element s x[1], x[2], ..., x[n]. Algorithm  OK(x, k): For i ← 1, k – 1 execute If x[k] = x[i] then Return False EndIf EndFor Return True EndAlgorithm What code sequence should be inserted into the algorithm  so that , after calling p(x, n, 1, False) all permutations of order n are displayed, each only once? ",
        "answers": [
            {
                "A": "If k > 1 then\n    k ← k – 1\nElse\n    final ← True\nEndIf"
            },
            {
                "B": "If k > 0 then\n    k ← k - 1\nElse\n    final ← True\nEndIf"
            },
            {
                "C": "final ← True"
            },
            {
                "D": "If k > 1 then\n    k ← k - 1\n    final ← True\nEndIf\n 8"
            }
        ],
        "code": "Algorithm p(x, n, k, final):\n    While final =  False execute\n        While x[k] < n execute\n            x[k] ← x[k] + 1\n            If OK(x, k) =  True then\n                If k = n then\n                    Afis(x, 1, n)\n                Else\n                    k ← k + 1\n                    x[k] ← 0\n                EndIf\n            EndIf\n        EndWhile\n        ___________ // insert code sequence here\n    EndWhile\nEndAlgorithm",
        "correct_answers": "A",
        "index": 21
    },
    {
        "question": " 22. Let us consider the algorit hms problema(n)  and calcul(a, b) , where  n, a, b are natural numbers  (0 ≤ n, a, b ≤ 9). Algorithm calcul(a, b):     t ← 0     For cifra ← a, b execute         t ← t + problema(cifra)     EndFor        Write t EndAlgorithm Which of the following statements are true ? ",
        "answers": [
            {
                "A": "The call  calcul(1, 8)  displays  1095."
            },
            {
                "B": "The call  calcul(1, 8)  displays  1094."
            },
            {
                "C": "The call  calcul(0, 9)  displays  1095."
            },
            {
                "D": "The call  calcul(0, 9)  displays  1595."
            }
        ],
        "code": "Algorithm problema(n):\nrezultat ← 0\nFor k ← 0, n execute\nFor p ← 0, n execute\nFor j ← 0, n execute\nIf p MOD 2 = 0 then\nrezultat ← rezultat + 1\nEndIf\nEndFor\nEndFor\nEndFor\nReturn rezultat\nEndAlgorithm",
        "correct_answers": "BD",
        "index": 22
    },
    {
        "question": "Let us consider the algorit hm checkAcc(n, f, w, lw) , where n is a non-zero natural  number   (1 ≤ n ≤ 104), f is a natural number , w is an array of  lw (1 ≤ lw ≤ 104)  natural  numbers  (w[1], w[2], ..., w[lw], where  0 ≤ w[p] ≤ 104, for  p = 1, 2, ..., lw). The a lgorit hm checkAcc(n, f, w, lw)  calls the algorit hm t(i, j, k) , where  i, j and k are natural  numbers . The a lgorit hm t(i, j, k)  returns a  boolean result . In which of the following situations  the algorit hm checkAcc(2, f, w, lw)   return s True , knowing that the algorit hm t(i, j, k) return s True for the values inside the table , and otherwise  returns False ? i j k 1 0 1 1 1 2 2 1 2 ",
        "answers": [
            {
                "A": "w = [0, 0, 1, 1], lw = 4 and f = 1"
            },
            {
                "B": "w = [1, 1, 1, 0], lw = 4 and f = 2"
            },
            {
                "C": "w = [0, 0, 1, 1], lw = 4 and f = 2"
            },
            {
                "D": "w = [0, 0, 0, 0], lw = 4 and f = 1"
            }
        ],
        "code": "Algorithm  checkAcc(n, f, w, lw) :\n    acc ← True\n    If lw = 0 AND f ≠ 1 then\n        acc ← False\n    Else\n        index ← 1\n        q ← 1\n        While (acc = True) AND (index ≤ lw) execute\n            crt ← 1\n            changed ← False\n            While (changed = False) AND (crt ≤ n) execute\n                If t(q, w[index], crt) t hen\n                    q ← crt\n                    changed ← True\n                Else\n                    crt ← crt + 1\n                EndIf\n            EndWhile\n            If changed = False then\n                acc ← False\n            Else\n                index ← index + 1\n            EndIf\n        EndWhile\n        If (index > lw) AND (acc = True) AND (q ≠ f) then\n            acc ← False\n        EndIf\n    EndIf\n    Return acc\nEndAlgorithm",
        "correct_answers": "CD",
        "index": 23
    },
    {
        "question": "Let us consider the array  of digits  a = [0, 1, 2, 3, 4 , 5, 6, 7, 8, 9]. To display  the element s of array  a in a different order , the array  b (initially empty ) is constructed . At each step , one can choose one of the following operations : • Add – the first element of  array  a is added to the end of array  b and is deleted from array  a. • Delet e – displays , then deletes  the last element of array  b. Notes : - The e lement s of array  a are processed in the given order . - The Add operation cannot be used if array  a is empty  and the Delete  operation  cannot  be used if array  b is empty . - The processing ends when arrays a and b are both empty . Which of the following digit  orderings  CANNOT  be displayed by considering the rules above ? ",
        "answers": [
            {
                "A": "0 1 2 3 4 5 6 7 8 9"
            },
            {
                "B": "9 8 7 6 5 4 3 2 1 0"
            },
            {
                "C": "2 4 6 5 3 7 0 1 9 8"
            },
            {
                "D": "2 3 1 4 5 0 8 9 7 6"
            }
        ],
        "code": "",
        "correct_answers": "C",
        "index": 24
    }
]